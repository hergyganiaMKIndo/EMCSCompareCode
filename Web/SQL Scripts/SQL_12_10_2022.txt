CREATE TABLE [dbo].[BlAwb_Change](
	[Id] [bigint] IDENTITY(1,1) NOT NULL Primary Key,
	[IdBlAwb] [bigint] NOT NULL,
	[IdCl] [bigint] NOT NULL,
	[Number] [nvarchar](200) NOT NULL,
	[MasterBlDate] [datetime] NULL,
	[HouseBlNumber] [nvarchar](200) NULL,
	[HouseBlDate] [datetime] NULL,
	[Description] [nvarchar](max) NOT NULL,
	[FileName] [nvarchar](200) NULL,
	[Publisher] [nvarchar](50) NOT NULL,
	[BlAwbDate] [smalldatetime] NULL,
	[CreateDate] [smalldatetime] NOT NULL,
	[CreateBy] [nvarchar](50) NOT NULL,
	[UpdateDate] [smalldatetime] NULL,
	[UpdateBy] [nvarchar](50) NULL,
	[IsDelete] [bit] NOT NULL,
	[Status] nvarchar(max) null,
 )


 GO


 alter PROCEDURE [dbo].[sp_get_blawb_list] --exec [dbo].[sp_get_blawb_list] 'xupj21wdn',''      
(      
 @Username nvarchar(100),      
 @Search nvarchar(100),      
 @isTotal bit = 0,      
 @sort nvarchar(100) = 'Id',      
 @order nvarchar(100) = 'ASC',      
 @offset nvarchar(100) = '0',      
 @limit nvarchar(100) = '10'      
)      
AS      
BEGIN      
    SET NOCOUNT ON;      
    DECLARE @sql nvarchar(max);        
 DECLARE @WhereSql nvarchar(max) = '';      
 DECLARE @GroupId nvarchar(100);      
 DECLARE @RoleID bigint;      
 DECLARE @area NVARCHAR(max);      
 DECLARE @role NVARCHAR(max) = '';       
 SET @sort = 'bl.'+@sort;      
      
 select @GroupId = Organization_Name from employee where Employee_Status = 'Active' AND AD_User = @Username;      
      
      
 SELECT @area = U.Business_Area      
  ,@role = U.[Role]      
 FROM dbo.fn_get_employee_internal_ckb() U      
 WHERE U.AD_User = @Username;      
      
 if @role !=''      
 BEGIN      
      
      
 IF (@role !='EMCS IMEX' and @Username !='ict.bpm')      
 BEGIN      
  SET @WhereSql = ' AND t0.CreateBy='''+@Username+''' ';      
 END      
      
 SET @sql = 'SELECT ';      
 IF (@isTotal <> 0)      
 BEGIN      
  SET @sql += 'count(*) total '      
 END       
 ELSE      
 BEGIN      
       
  SET @sql += ' bl.Id      
      , bl.IdCl      
      , bl.Number      
      , np.AjuNumber      
      , bl.MasterBlDate      
      , bl.HouseBlNumber      
      , bl.HouseBlDate       
      , bl.Publisher     
   ,ISNULL((select TOP 1(Id) from RequestForChange WHERE FormId = bl.IdCl AND FormType = ''BlAwb'' AND [Status] = 0),0) AS PendingRFC    
      , CASE WHEN t2.Employee_Name IS NOT NULL THEN t2.Employee_Name ELSE ua.FullName END PreparedBy      
      , CASE WHEN t2.Employee_Name IS NOT NULL THEN t2.Email ELSE ua.Email END Email             
      , STUFF((SELECT '', ''+ISNULL(tx1.EdoNo, ''-'')      
       FROM dbo.CargoItem tx0      
       JOIN dbo.Cipl tx1 on tx1.id = tx0.IdCipl      
       WHERE tx0.IdCargo = tx0.Id      
       GROUP BY tx1.EdoNo      
       FOR XML PATH(''''),type).value(''.'',''nvarchar(max)''),1,1,'''') [RefEdo]      
      , c.ClNo      
      , c.CargoType      
      , CASE WHEN t0.[IdStep] = 30069 THEN ''Waiting approval draft PEB''       
    WHEN (t0.[IdStep] = 30070 AND t0.[Status] = ''Approve'') THEN ''Waiting NPE document''       
    WHEN ((t0.[IdStep] = 30070 OR t0.[IdStep] = 30072) AND t0.[Status] = ''Revise'') THEN ''Need revision review by imex''       
    WHEN t0.[IdStep] = 30071 THEN ''Waiting approval NPE''   
 WHEN t0.IdStep = 10020 THEN ''Approval''  
    ELSE CASE WHEN t11.Step = ''System'' THEN t8.ViewByUser ELSE t1.ViewByUser END END as StatusViewByUser '      
 END      
 SET @sql +='  FROM BlAwb bl      
 join NpePeb np on np.IdCl = bl.IdCl      
     JOIN dbo.Cargo c on c.Id = bl.IdCl      
     left join RequestCl t0 on t0.IdCl = bl.IdCl      
     left join (      
   select       
    nx.Id, nx.IdStep IdNextStep, nx.IdStatus, nx.IdStep NextStep,       
    nf.Name, nf.Type, nf.Id IdFlow, np.Id IdCurrentStep,       
    ns.Status, np.Step CurrentStep, np.AssignType, np.AssignTo, ns.ViewByUser,      
    nt.AssignType NextAssignType, nt.AssignTo NextAssignTo, nt.Step NextStepName      
   from dbo.FlowNext nx      
   join dbo.FlowStatus ns on ns.Id = nx.IdStatus      
   join dbo.FlowStep np on np.Id = ns.IdStep      
   join dbo.Flow nf on nf.Id = np.IdFlow      
   join dbo.FlowStep nt on nt.Id = nx.IdStep      
  ) as t1 on t1.IdFlow = t0.IdFlow AND t1.IdCurrentStep = t0.IdStep AND t1.Status = t0.Status      
  inner join dbo.Flow t3 on t3.id = t0.IdFlow      
  left join dbo.FlowStep t7 on t7.Id = [dbo].[fn_get_next_step_id](      
    t1.NextAssignType, t0.Pic, t0.IdFlow, t1.IdNextStep, [dbo].fn_get_status_id(t0.IdStep, t0.[Status]), t0.Id ) and t7.IdFlow = t1.IdFlow      
  left join dbo.FlowStatus t8 on t8.[Status] = t0.[Status] AND t8.IdStep = [dbo].[fn_get_next_step_id](      
    t1.NextAssignType, t0.Pic, t0.IdFlow, t1.IdNextStep, [dbo].fn_get_status_id(t0.IdStep, t0.[Status]), t0.Id )      
  left join dbo.FlowStatus t9 on t9.[Status] = t0.[Status] AND t9.IdStep = t1.IdNextStep      
  left join dbo.FlowNext t10 on t10.IdStatus = t9.Id      
  left join dbo.FlowStep t11 on t11.Id = t10.IdStep      
    JOIN PartsInformationSystem.dbo.[UserAccess] ua on ua.UserID = bl.CreateBy      
    LEFT JOIN employee t2 on t2.AD_User = bl.CreateBy      
    WHERE 1=1 AND bl.IsDelete = 0  AND c.CargoType != ''''' + @WhereSql+ ' AND (bl.Number like ''%'+@Search+'%'' OR bl.HouseBlNumber like ''%'+@Search+'%'')';      
      
 IF @isTotal = 0       
 BEGIN      
  SET @sql += ' ORDER BY '+@sort+' '+@order+' OFFSET '+@offset+' ROWS FETCH NEXT '+@limit+' ROWS ONLY';      
 END       
      
 --Print(@sql);      
 EXECUTE(@sql);      
 END      
END

GO


            
CREATE PROCEDURE [dbo].[SP_Insert_BlAwbRFCChange]          
(          
 @Id BIGINT,  
 @IdBlAwb BIGINT ,  
 @Number NVARCHAR(100),          
 @MasterBlDate datetime,          
 @HouseBlNumber NVARCHAR(200),          
 @HouseBlDate datetime,          
 @Description NVARCHAR(50),          
 @FileName NVARCHAR(max),          
 @Publisher NVARCHAR(50),          
 @CreateBy NVARCHAR(50),          
 @CreateDate datetime,          
 @UpdateBy NVARCHAR(50),          
 @UpdateDate datetime,          
 @IsDelete BIT,          
 @IdCl BIGINT ,  
 @Status nvarchar(max)  
)          
AS          
BEGIN       
 if( @FileName  IS NULL or @FileName = '')        
 begin        
 set @FileName = (select [FileName] From BlAwb where Id = @IdBlAwb)        
 end  
if(@IdBlAwb <> 0 and @Id = 0)        
 begin       
 set @Id = (select Id from BlAwb_Change where IdBlAwb = @IdBlAwb)        
 set @Id = (select IIF(@Id IS NULL, -1, @Id) As Id)        
 end    
 IF @Id <= 0          
 BEGIN          
 INSERT INTO [dbo].[BlAwb_Change]          
           ([Number],[MasterBlDate],[HouseBlNumber],[HouseBlDate],[Description],[FileName],[Publisher],[CreateBy],[CreateDate],[UpdateBy],[UpdateDate],[IsDelete],[IdCl]  
  ,[IdBlAwb],[Status])          
     VALUES          
           (@Number,@MasterBlDate,@HouseBlNumber,@HouseBlDate,@Description ,@FileName,@Publisher,@CreateBy,@CreateDate,@UpdateBy,@UpdateDate,@IsDelete,@IdCl,@IdBlAwb,@Status)          
          
 set  @Id = SCOPE_IDENTITY()           
 --SELECT C.Id as ID, CONVERT(nvarchar(5), C.IdCl) as [NO], C.CreateDate as CREATEDATE FROM BlAwb C WHERE C.id = @LASTID          
 END          
 ELSE           
 BEGIN          
 UPDATE [dbo].[BlAwb_Change]          
  SET [Number] = @Number ,[MasterBlDate] = @MasterBlDate   ,[HouseBlNumber] = @HouseBlNumber  ,[HouseBlDate] = @HouseBlDate          
           ,[Description] = @Description  ,[Publisher] = @Publisher  ,[CreateBy] = @CreateBy  ,[CreateDate] = @CreateDate          
           ,[UpdateBy] = @UpdateBy   ,[UpdateDate] = @UpdateDate ,[Status] = @Status,  
     FileName = @FileName  
     WHERE Id = @Id          
     --SELECT C.Id as ID, CONVERT(nvarchar(5), C.IdCl) as [NO], C.CreateDate as CREATEDATE FROM BlAwb C WHERE C.id = @Id          
 END          
 select CAST(@Id as bigint) as Id     
 --IF(@Status <> 'Draft')      
 --BEGIN      
 -- SET @Status = 'Create BL AWB'    
 -- EXEC [sp_update_request_cl] @IdCl, @CreateBy, @Status, ''      
 --END      
END 