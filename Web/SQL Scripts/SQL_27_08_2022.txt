alter FUNCTION [dbo].[fn_get_gr_request_list_all] -- select * from [fn_get_gr_request_list_all]('xupj21jpd', 'IMEX')     
(     
 -- Add the parameters for the function here    
 --@Username nvarchar(100),    
 --@GroupId nvarchar(100)    
)    
RETURNS TABLE     
AS    
RETURN     
(    
 -- Add the SELECT statement with parameter references here    
 select * from (    
   select     
   t0.[Id]      
   ,t0.IdGr     
   ,t0.[IdFlow]     
   ,t0.[IdStep]     
   ,CASE         
     WHEN t0.[Status] = 'Submit'    
     --THEN t0.[Status]  
  THEN 'Waiting Approval'    
     ELSE t0.[Status]     
   END AS [Status]    
   --,t0.[Status]     
   ,t0.[Pic]      
   ,t0.[CreateBy]     
   ,t0.[CreateDate]     
   ,t0.[UpdateBy]      
   ,t0.[UpdateDate]     
   ,t0.[IsDelete]      
   , t3.Name FlowName    
   , t3.Type SubFlowType    
   , [dbo].[fn_get_next_step_id](    
    t1.NextAssignType, t0.Pic, t0.IdFlow, t1.IdNextStep,     
    [dbo].fn_get_status_id(    
     t0.IdStep, t0.Status    
    ), t0.Id    
   ) as IdNextStep     
   , [dbo].[fn_get_step_name](    
    [dbo].[fn_get_next_step_id](    
     t1.NextAssignType, t0.Pic, t0.IdFlow, t1.IdNextStep,     
     [dbo].fn_get_status_id(    
      t0.IdStep, t0.Status    
     ), t0.Id    
    )    
   ) as NextStepName    
   , [dbo].[fn_get_next_assignment_type](    
    t1.NextAssignType, t0.Pic, t1.IdNextStep, t0.Id    
   ) NextAssignType    
   , t1.ViewByUser NextStatusViewByUser    
   , t2.GrNo    
   , (select top 1 s.PicName from Shippingfleet s where  s.IdGr =  t0.IdGr)as PicName  
   , (select top 1 s.PhoneNumber from Shippingfleet s where  s.IdGr =  t0.IdGr)as PhoneNumber    
   , (select top 1 s.SimNumber from Shippingfleet s where  s.IdGr =  t0.IdGr)as SimNumber    
   , (select top 1 s.StnkNumber from Shippingfleet s where  s.IdGr =  t0.IdGr)as StnkNumber    
   , (select top 1 s.NopolNumber from Shippingfleet s where  s.IdGr =  t0.IdGr)as NopolNumber    
   , (select top 1 s.EstimationTimePickup from Shippingfleet s where  s.IdGr =  t0.IdGr)as EstimationTimePickup    
   , [dbo].[fn_get_next_assignment_type](    
    t1.NextAssignType, t0.Pic, t1.IdNextStep, t0.Id    
   ) as AssignmentType    
   , [dbo].[fn_get_next_approval] (    
    [dbo].[fn_get_next_assignment_type](    
     t1.NextAssignType, t0.Pic, t1.IdNextStep, t0.Id    
    ), t0.Pic, t1.NextAssignTo, t0.CreateBy, t0.Id) as NextAssignTo    
  from dbo.RequestGr t0    
  left join (    
   select     
    nx.Id, nx.IdStep IdNextStep, nx.IdStatus, nx.IdStep NextStep,     
    nf.Name, nf.Type, nf.Id IdFlow, np.Id IdCurrentStep,     
    ns.Status, np.Step CurrentStep, np.AssignType, np.AssignTo, ns.ViewByUser,    
    nt.AssignType NextAssignType, nt.AssignTo NextAssignTo, nt.Step NextStepName    
   from dbo.FlowNext nx    
   join dbo.FlowStatus ns on ns.Id = nx.IdStatus    
   join dbo.FlowStep np on np.Id = ns.IdStep    
   join dbo.Flow nf on nf.Id = np.IdFlow    
   join dbo.FlowStep nt on nt.Id = nx.IdStep    
  ) as t1 on t1.IdFlow = t0.IdFlow AND t1.IdCurrentStep = t0.IdStep AND t1.Status = t0.Status    
  inner join dbo.GoodsReceive t2 on t2.id = t0.IdGr    
  inner join dbo.Flow t3 on t3.id = t0.IdFlow    
 ) as tab0     
 --WHERE (tab0.NextAssignTo = @Username OR tab0.NextAssignTo = @GroupId)    
) 


GO


-- =============================================                    
-- Author:                            Ali Mutasal                    
-- ALTER date: 09 Des 2019                    
-- Description:    Function untuk melakukan proses email                    
-- =============================================                    
alter FUNCTION [dbo].[fn_proccess_email_template]                    
(                    
    -- Add the parameters for the function here                    
    @requestType nvarchar(100) = '',                    
    @requestId nvarchar(100) = '',                    
    @template nvarchar(max) = '',                    
    @typeDoc nvarchar(max) = '',                    
    @lastPIC nvarchar(max) = ''                    
)                    
RETURNS nvarchar(max)                    
AS                    
BEGIN                    
    ------------------------------------------------------------------                    
    -- 1. Melakukan Declare semua variable yang dibutuhkan                    
    ------------------------------------------------------------------                    
    BEGIN                   
    -- ini hanya sample silahkan comment jika akan digunakan                    
    --SET @template = 'Ini adalah email dari [requestor_name], dan ini adalah email untuk [last_pic_name]. selanjutnya akan dikirim ke [next_pic_name]';                    
    DECLARE @variable_table TABLE (                    
        key_data VARCHAR(MAX) NULL,                    
        val_data VARCHAR(MAX) NULL                    
    );                    
                    
    DECLARE                     
  @key NVARCHAR(MAX),                     
  @flow NVARCHAR(MAX),                     
  @val NVARCHAR(MAX),                    
  @requestor_name NVARCHAR(MAX),                    
  @requestor_id NVARCHAR(MAX),                    
  @requestor_username NVARCHAR(MAX),                    
  @last_pic_name NVARCHAR(MAX),                    
  @last_pic_id NVARCHAR(MAX),                    
  @last_pic_username NVARCHAR(MAX),                    
  @next_pic_name NVARCHAR(MAX),                    
  @next_pic_id NVARCHAR(MAX),                    
  @next_pic_username NVARCHAR(MAX),                    
  @si_number NVARCHAR(MAX) = '',                    
  @ss_number NVARCHAR(MAX) = '',                    
  @req_number NVARCHAR(MAX) = '',                    
  @CiplNo NVARCHAR(MAX) = '',                    
  @DO NVARCHAR(MAX) = '',                    
  @DA NVARCHAR(MAX) = '',                    
  @NoReference NVARCHAR(MAX) = '',                    
  @CIPLBranchName NVARCHAR(MAX) = '',                    
  @PICPickupPoints NVARCHAR(MAX) = '',                    
  @PickupPointsArea NVARCHAR(MAX) = '',                    
  @npe_number NVARCHAR(MAX) = '',                    
  @peb_number NVARCHAR(MAX) = '',                    
  @bl_awb_number NVARCHAR(MAX) = '',                    
  @req_date NVARCHAR(MAX) = '',                    
  @superior_req_name nvarchar(max) = '',           
  @superior_req_id nvarchar(max) = '',              
  @Note nvarchar(max) = '',              
  @employee_name nvarchar(max) = '' ,  
  @Dono nvarchar(max)  
                 
                                
    IF (@lastPIC <> '')                 
    BEGIN                    
        SELECT @employee_name = employee_name                     
        FROM dbo.fn_get_employee_internal_ckb()                     
        WHERE AD_User = @lastPIC;                    
    END                    
END                    
                                    
------------------------------------------------------------------                    
-- 2. Query untuk mengisi data ke variable variable yang dibutuhkan                    
------------------------------------------------------------------                    
BEGIN                    
    -- Mengambil data dari fn request per flow                    
    BEGIN                    
  IF (@requestType = 'CIPL')                    
   BEGIN                    
   SET @flow = 'CIPL';                    
   SELECT                     
    @requestor_id = t1.Employee_ID,                    
    @requestor_name = t1.Employee_Name,                    
    @superior_req_name = t1.Superior_Name,                    
    @superior_req_id = t1.Superior_ID,                    
    @requestor_username = t1.AD_User,                    
    @last_pic_id = t2.Employee_ID,                    
    @last_pic_name = t2.Employee_Name,                    
    @last_pic_username = t2.AD_User,                    
    @next_pic_id = t3.Employee_ID,                    
    @DO = t4.EdoNo,            
    @CiplNo = t4.CiplNo,                    
    @DA = t4.Da ,              
    @Note = ISNULL((select TOP 1 notes from CiplHistory where IdCipl = t0.IdCipl order by id desc),''),          
    @NoReference = t4.ReferenceNo,                    
    @CIPLBranchName = (SELECT C.Branch+' - '+MA.BAreaName FROM MasterArea MA inner join Cipl C ON C.Branch = MA.BAreaCode WHERE C.id=t0.IdCipl ),                    
    @PICPickupPoints = t6.Employee_Name,                    
    @PickupPointsArea = t4.PickUpArea+'-'+(SELECT MA.BAreaName FROM MasterArea MA inner join Cipl C ON C.Branch = MA.BAreaCode WHERE C.id=t0.IdCipl ),                    
    @next_pic_name = CASE WHEN t0.Status = 'Revise' OR t0.Status = 'Reject' OR (t0.Status = 'Approve' AND t0.NextAssignType IS NULL) THEN t5.Employee_Name   
    WHEN t0.NextAssignType = 'Group' THEN t0.NextAssignTo  ELSE t3.Employee_Name END,                    
                @next_pic_username = t3.AD_User,                    
    @req_number = IIF(@typeDoc = 'CKB', ISNULL(t4.EdoNo,''), t4.CiplNo),                    
                @req_date = RIGHT('0' + DATENAME(DAY, t0.CreateDate), 2) + ' ' + DATENAME(MONTH, t0.CreateDate)+ ' ' + DATENAME(YEAR, t0.CreateDate)                    
            FROM                     
    dbo.fn_get_cipl_request_list_all() t0                     
    INNER JOIN dbo.Cipl t4 on t4.id = t0.IdCipl                    
    LEFT JOIN dbo.fn_get_employee_internal_ckb() t1 on t1.AD_User = t0.CreateBy                    
                LEFT JOIN dbo.fn_get_employee_internal_ckb() t2 on t2.AD_User = t0.Pic                    
                LEFT JOIN dbo.fn_get_employee_internal_ckb() t3 on t3.AD_User = t0.NextAssignTo                    
                LEFT JOIN dbo.fn_get_employee_internal_ckb() t5 on t5.AD_User = t0.UpdateBy              
                LEFT JOIN dbo.fn_get_employee_internal_ckb() t6 on t6.AD_User = t4.PickUpPic              
            WHERE                     
                t0.IdCipl = @requestId;                    
   END                    
                    
        --IF (@requestType IN ('CL', 'BLAWB', 'PEB_NPE'))                    
  IF (@requestType = 'CL') OR (@requestType = 'BLAWB') OR (@requestType = 'PEB_NPE')                     
   BEGIN                    
   SET @flow = @requestType;                    
   SELECT                     
                @requestor_id = t5.Employee_ID,                    
                @requestor_name = t5.Employee_Name,                    
                @superior_req_name = t5.Superior_Name,                    
                @superior_req_id = t5.Superior_ID,                    
                @requestor_username = t5.AD_User,                    
                @last_pic_id = t6.Employee_ID,                    
                @last_pic_name = t6.Employee_Name,                    
    @last_pic_username = t6.AD_User,                    
    @next_pic_id = t7.Employee_ID,                    
    @next_pic_name = t7.Employee_Name,                    
    @next_pic_username = t7.AD_User,                    
    @req_number = t1.ClNo,                    
                @ss_number = t1.SsNo,                    
                @si_number = t2.SlNo,                    
                @npe_number = t3.NpeNumber,                    
                @peb_number = t3.PebNumber,     
                @NoReference = (SELECT      
        STUFF((      
        SELECT ', ' + ReferenceNo      
        FROM Cipl WHERE id                     
         in (SELECT IdCipl FROM CargoCipl                     
         where IdCargo = t0.IdCl)      
        FOR XML PATH('')), 1, 1, '')),    
      --          @DO = (SELECT      
      --STUFF((      
      --SELECT ', ' + EdoNumber      
      --FROM CargoCipl WHERE IdCargo = t0.IdCl      
      --FOR XML PATH('')), 1, 1, '')),      
    @DO = (SELECT      
      STUFF((      
      SELECT ', ' + DoNo   
      FROM GoodsReceiveItem WHERE IdCipl                       
       in (SELECT IdCipl FROM CargoCipl                     
       where IdCargo = t0.IdCl)      
      FOR XML PATH('')), 1, 1, '')),                   
                @CIPLBranchName = (SELECT STUFF((      
         SELECT ', ' + C.Branch+' - '+MA.BAreaName FROM MasterArea MA     
         inner join Cipl C ON C.Branch = MA.BAreaCode     
         WHERE C.id in (SELECT IdCipl FROM CargoCipl                     
         where IdCargo = t0.IdCl)      
         FOR XML PATH('')), 1, 1, '')),                    
      --          @DA = (SELECT      
      --STUFF((      
      --SELECT ', ' + Da      
      --FROM Cipl WHERE id                     
      -- in (SELECT IdCipl FROM CargoCipl                     
      -- where IdCargo = t0.IdCl)      
      --FOR XML PATH('')), 1, 1, '')),     
    @DA = (SELECT      
      STUFF((      
      SELECT ', ' + DaNo   
      FROM GoodsReceiveItem WHERE IdCipl                       
       in (SELECT IdCipl FROM CargoCipl                     
       where IdCargo = t0.IdCl)      
      FOR XML PATH('')), 1, 1, '')),                
                @CiplNo = (SELECT      
       STUFF((      
       SELECT ', ' + CiplNo      
       FROM Cipl WHERE id                     
        in (SELECT IdCipl FROM CargoCipl                     
        where IdCargo = t0.IdCl)      
       FOR XML PATH('')), 1, 1, '')),                    
    @bl_awb_number = t4.Number,                    
                @req_date = RIGHT('0' + DATENAME(DAY, t0.CreateDate), 2) + ' ' + DATENAME(MONTH, t0.CreateDate)+ ' ' + DATENAME(YEAR, t0.CreateDate)                    
            FROM                     
                dbo.fn_get_cl_request_list_all() t0                     
                INNER JOIN dbo.Cargo t1 on t1.id = t0.IdCl              
                LEFT JOIN dbo.ShippingInstruction t2 on t2.IdCL = t0.IdCl                    
                LEFT JOIN dbo.NpePeb t3 on t3.IdCL = t0.IdCl                    
                LEFT JOIN dbo.BlAwb t4 on t4.IdCL = t0.IdCl              
    LEFT JOIN dbo.fn_get_employee_internal_ckb() t5 on t5.AD_User = t0.CreateBy                    
    LEFT JOIN dbo.fn_get_employee_internal_ckb() t6 on t6.AD_User = t0.Pic                    
    LEFT JOIN dbo.fn_get_employee_internal_ckb() t7 on t7.AD_User = t0.NextAssignTo                    
   WHERE                     
                t0.IdCl = @requestId;                                                                                         
            END                    
                    
        IF (@requestType = 'RG')                    
   BEGIN                    
            SET @flow = 'Receive Goods';                    
   set  @Dono = (select top 1 DoNo from ShippingFleet where IdGr = @requestId)  
  
            SELECT                  
    --@DO = (SELECT      
    --  STUFF((      
    --  SELECT ', ' + EdoNo      
    --  FROM Cipl WHERE id= gt.IdCipl      
    --  FOR XML PATH('')), 1, 1, '')),     
    @DO = (SELECT      
      STUFF((      
      SELECT Top 1 DoNo   
      FROM ShippingFleet WHERE IdGr = t4.Id       
      FOR XML PATH('')), 1, 1, '')),                  
    --@CIPLBranchName = (SELECT C.Branch+' - '+MA.BAreaName FROM MasterArea MA   
    --inner join Cipl C ON C.Branch = MA.BAreaCode  
    --WHERE C.id =(select top 1 IdCipl from ShippingFleet where IdGr = t4.Id)),  
    @CIPLBranchName = (SELECT  
      stuff(( select ', ' + cast(C.Branch+' - '+MA.BAreaName as varchar) FROM MasterArea MA   
    inner join Cipl C ON C.Branch = MA.BAreaCode  
    WHERE C.id  IN(select id from Cipl where EdoNo In (SELECT part FROM   [SDF_SplitString](@Dono,',')))for xml path('')), 1 ,1, '')),  
    @DA = (SELECT      
      STUFF((      
      SELECT Top 1 DaNo   
      FROM ShippingFleet WHERE IdGr = t4.Id      
      FOR XML PATH('')), 1, 1, '')),   
    --@DA = (SELECT      
    --  STUFF((      
    --  SELECT ', ' + Da      
    --  FROM Cipl   
    --  WHERE id = gt.IdCipl      
    --  FOR XML PATH('')), 1, 1, '')),                    
    @CiplNo = (SELECT      
      STUFF((      
      SELECT ', ' + CiplNo      
      FROM Cipl WHERE id in (select id from Cipl where EdoNo In (SELECT part FROM   [SDF_SplitString](@Dono,',')))  
      FOR XML PATH('')), 1, 1, '')),        
    @requestor_id = t1.Employee_ID,                    
    @requestor_name = t1.Employee_Name,                    
    @superior_req_name = t1.Superior_Name,                    
    @superior_req_id = t1.Superior_ID,                    
    @requestor_username = t1.AD_User,                    
    @last_pic_id = t2.Employee_ID,                    
    @last_pic_name = t2.Employee_Name,                    
    @last_pic_username = t2.AD_User,                    
    @next_pic_id = t3.Employee_ID,                    
    @next_pic_name = t3.Employee_Name,                    
    @next_pic_username = t3.AD_User,                    
    @req_number = t4.GrNo,                    
    @req_date = RIGHT('0' + DATENAME(DAY, t0.CreateDate), 2) + ' ' + DATENAME(MONTH, t0.CreateDate)+ ' ' + DATENAME(YEAR, t0.CreateDate)                    
   FROM                     
                dbo.fn_get_gr_request_list_all() t0                     
                INNER JOIN dbo.GoodsReceive t4 on t4.id = t0.IdGr         
    --INNER JOIN GoodsReceiveItem GT on GT.IdGr = t0.IdGr        
    LEFT JOIN dbo.fn_get_employee_internal_ckb() t1 on t1.AD_User = t0.CreateBy                    
    LEFT JOIN dbo.fn_get_employee_internal_ckb() t2 on t2.AD_User = t0.Pic                    
                LEFT JOIN dbo.fn_get_employee_internal_ckb() t3 on t3.AD_User = t0.NextAssignTo                    
                                  
   WHERE                     
    t0.IdGr = @requestId;                    
            END                    
                    
        IF (@requestType = 'DELEGATION')                    
   BEGIN                    
            SET @flow = 'Delegation';                                                                  --SELECT * FROM dbo.fn_get_gr_request_list_all() t0 where t0.Id = @requestId;                    
   END                    
                    
            INSERT INTO  @variable_table                     
            VALUES                     
            ('@RequestorName', ISNULL(@requestor_name, '-'))                    
            ,('@RequestNo', ISNULL(@req_number, '-'))                    
            ,('@CreatedDate', ISNULL(@req_date, '-'))                    
            ,('@CiplNo', ISNULL(@CiplNo, '-'))                    
            ,('@CIPLBranchName', ISNULL(@CIPLBranchName, '-'))                    
            ,('@PICPickupPoints', ISNULL(@PICPickupPoints, '-'))                    
            ,('@DO', ISNULL(@DO, '-'))                    
            ,('@DA', ISNULL(@DA, '-'))                    
            ,('@PickupPointsArea', ISNULL(@PickupPointsArea, '-'))                    
   ,('@SuperiorEmpID', ISNULL(@superior_req_id, '-'))                    
   ,('@SuperiorName', ISNULL(@superior_req_name, '-'))                    
   ,('@MobileLink', 'http://pis.trakindo.co.id')                    
   ,('@DesktopLink', 'http://pis.trakindo.co.id')                    
   ,('@ApproverPosition', ISNULL(@flow, '-'))                    
   ,('@ApproverName', ISNULL(@next_pic_name, ISNULL(@employee_name,'-')))                    
   ,('@RequestorEmpID', ISNULL(@requestor_id, '-'))                    
   ,('@flow', ISNULL(@flow, '-'))           
            ,('@NoReference', ISNULL(@NoReference, '-'))                    
   ,('@requestor_name', ISNULL(@requestor_name, '-'))                    
            ,('@requestor_id', ISNULL(@requestor_id, '-'))                    
            ,('@last_pic_name', ISNULL(@last_pic_name, '-'))                    
            ,('@last_pic_id', ISNULL(@last_pic_id, '-'))                    
            ,('@next_pic_name', ISNULL(@next_pic_name, '-'))                    
            ,('@next_pic_id', ISNULL(@next_pic_id, '-'))                    
            ,('@si_number', ISNULL(@si_number, '-'))                    
   ,('@ss_number', ISNULL(@ss_number, '-'))                    
            ,('@req_number', ISNULL(@req_number, '-'))                    
            ,('@npe_number', ISNULL(@npe_number, '-'))                    
            ,('@peb_number', ISNULL(@peb_number, '-'))                    
            ,('@bl_awb_number', ISNULL(@bl_awb_number, '-'))                    
            ,('@req_date', ISNULL(@req_date, '-'))                    
            ,('@superior_req_name', ISNULL(@superior_req_name, '-'))                    
            ,('@superior_req_id', ISNULL(@superior_req_id, '-'))          
            ,('@Note', ISNULL(@Note, '-'))        
 END                    
END                    
                                    
------------------------------------------------------------------                    
-- 3. Melakukan Replace terhadap data yang di petakan di template dgn menggunakan perulangan                    
------------------------------------------------------------------                    
BEGIN                    
    DECLARE cursor_variable CURSOR                    
    FOR                     
    SELECT                     
        key_data,            
        val_data                     
    FROM                     
        @variable_table;                    
                                                                                                                    
    OPEN cursor_variable;                     
    FETCH NEXT FROM cursor_variable INTO @key, @val;                     
    WHILE @@FETCH_STATUS = 0                    
        BEGIN                    
        -- Melakukan Replace terhadap variable di template dengan value dari hasil pencarian data diata.                    
        IF ISNULL(@key, '') <> ''                    
        BEGIN                    
  SET @template = REPLACE(@template, @key, @val);                    
        END                    
                    
    FETCH NEXT FROM cursor_variable INTO                     
                @key,                     
                @val;                    
        END;                    
                                                    
    CLOSE cursor_variable;                     
    DEALLOCATE cursor_variable;                    
END                    
                                    
------------------------------------------------------------------                    
-- 4. Menampilkan hasil dari proses replace                    
------------------------------------------------------------------                    
BEGIN                    
    RETURN @template;                    
END                    
END 

GO

alter PROCEDURE [dbo].[sp_proccess_email](      
                @RequestID bigint,      
                @TypeFlow nvarchar(100)      
)      
AS      
BEGIN      
                --DECLARE @RequestID bigint = 6      
                DECLARE       
                @IdFlow bigint,      
                @IdStep bigint,      
                @Status nvarchar(100),      
                @SendType nvarchar(100),      
                @SendTo nvarchar(100),      
                @Name nvarchar(100),      
                @Subject nvarchar(max),       
                @Template nvarchar(max),      
                @Requestor nvarchar(max),      
                @NextPic nvarchar(max),      
                @LastPic nvarchar(max),      
                @NextAssignType nvarchar(max),      
    @TypeDoc nvarchar(max)      
      
                IF @TypeFlow = 'CIPL'      
                BEGIN      
                                      
                                DECLARE csr CURSOR       
                FOR       
                                --DECLARE @RequestID bigint = 6;      
                                SELECT       
                                                t0.IdFlow, t0.IdStep, t0.Status, t1.SendType, t1.SendTo, t1.Name, t1.Subject, t1.Template,      
                                                t0.CreateBy, t0.NextAssignTo, t0.Pic       
                                FROM fn_get_cipl_request_list_all() t0      
                                LEFT JOIN NotifikasiEmail t1 on t1.IdFlow = t0.idFlow and t1.idStep = t0.idStep and t1.Status like '%' + t0.Status + '%'      
                                WHERE t0.IdCipl = @RequestID      
                                                      
                                OPEN csr      
                                                FETCH NEXT FROM csr      
                                INTO @IdFlow, @IdStep, @Status, @SendType, @SendTo, @Name, @Subject, @Template, @Requestor, @NextPic, @LastPic      
                                      
                                                WHILE @@FETCH_STATUS = 0      
                                                BEGIN      
      
                                                SELECT @subject = dbo.[fn_proccess_email_template]('CIPL', @RequestID, @subject, @TypeDoc, @LastPic)      
                                                SELECT @Template = dbo.[fn_proccess_email_template]('CIPL', @RequestID, @Template, @TypeDoc, @LastPic)      
                                                      
                                                -- IF(@IdStep IN (10,10026,10023,10016) AND @Status = 'Approve')      
            IF(@IdStep IN (10) AND @Status = 'Approve')      
                                                BEGIN      
                                                                DECLARE @CKB_TEAM nvarchar(max) = 'ict.bpm@trakindo.co.id'      
                                                                                , @TemplateCKB nvarchar(max) = ''      
                                                                                , @EmailSubject nvarchar(max) = ''      
                                                                                , @EmailMessage nvarchar(max);       
      
                                                                SELECT @EmailSubject = E.Subject, @EmailMessage = E.Message, @TypeDoc = E.RecipientType FROM EmailTemplate E WHERE RecipientType = 'CKB'      
                                                                      
                                                                SELECT @EmailSubject= dbo.[fn_proccess_email_template]('CIPL', @RequestID, @EmailSubject, @TypeDoc, @LastPic)      
                                                                SELECT @EmailMessage = dbo.[fn_proccess_email_template]('CIPL', @RequestID, @EmailMessage, @TypeDoc, @LastPic)      
      
                                                                SELECT @CKB_TEAM = CF.Email FROM CiplForwader CF WHERE IdCipl = @RequestID      
 exec [dbo].[sp_send_email_for_single] @EmailSubject, '', @EmailMessage, @CKB_TEAM                                 
                                      
                                                                --exec sp_send_email_for_ckb @EmailSubject, @CKB_TEAM, @EmailMessage      
                                                END      
      
                                                -- Send email      
                                                IF (@SendType = 'Group')      
                                                BEGIN      
                                                                exec sp_send_email_for_group @subject, @SendTo, @Template      
                                                END      
                                                ELSE      
                                                BEGIN      
                                                                IF (@SendType = 'Requestor')      
                                                                BEGIN                                                         
                                                                                exec sp_send_email_for_single @subject, @Requestor, @Template      
                                                                END      
                      
                                                                IF (@SendType = 'Thankyou')      
                                                                BEGIN      
                                                                                exec sp_send_email_for_single @subject, @LastPic, @Template      
                                                                END      
      
                                                                IF (@SendType = 'LastApprover')      
                                                                BEGIN      
                                                                                exec sp_send_email_for_single @subject, @LastPic, @Template      
                                                                END      
                                                                      
                                                                IF (@SendType = 'NextApprover')      
                                                                BEGIN      
                                                                                IF (@NextAssignType = 'Group')      
                                                                                BEGIN      
                                                                                                exec sp_send_email_for_group @subject, @SendTo, @Template      
                                                                                END      
                                                                                ELSE      
                                                                                BEGIN      
                                                                                                IF(@NextPic IS NULL)      
                                                                                                BEGIN      
                                                                                                                SET @NextPic = @LastPic;      
                                                                                                END      
                                                                                                exec sp_send_email_for_single @subject, @NextPic, @Template      
                                                                                                      
                                                                                END      
                                                                END             
                            END      
                                                FETCH NEXT FROM csr INTO @IdFlow, @IdStep, @Status, @SendType, @SendTo, @Name, @Subject, @Template, @Requestor, @NextPic, @LastPic      
                                END      
                                CLOSE csr      
                                DEALLOCATE csr      
                END      
      
                IF @TypeFlow = 'CL'      
                BEGIN      
                      
                DECLARE csr CURSOR       
            FOR       
                                --DECLARE @RequestID bigint = 6;      
                                SELECT       
                                                t0.IdFlow, t0.IdStep, t0.Status, t1.SendType, t1.SendTo, t1.Name, t1.Subject, t1.Template,      
                                                t0.CreateBy, t0.NextAssignTo, t0.Pic, t0.AssignmentType      
                                FROM fn_get_cl_request_list_all() t0      
                                LEFT JOIN NotifikasiEmail t1 on t1.IdFlow = t0.idFlow and t1.idStep = t0.idStep and t1.Status like '%' + t0.Status + '%'      
                                --WHERE t0.IdCl = 973      
                                WHERE t0.IdCl = @RequestID      
                                                      
                                OPEN csr      
                                                FETCH NEXT FROM csr      
                                                INTO @IdFlow, @IdStep, @Status, @SendType, @SendTo, @Name, @Subject, @Template, @Requestor, @NextPic, @LastPic, @NextAssignType      
                                      
                                                WHILE @@FETCH_STATUS = 0      
                                                BEGIN      
      
                                                SELECT @subject = dbo.[fn_proccess_email_template]('CL', @RequestID, @subject, @TypeDoc, @LastPic)      
                                                SELECT @Template = dbo.[fn_proccess_email_template]('CL', @RequestID, @Template, @TypeDoc, @LastPic)      
      
                                                -- Send email      
                                                IF (@SendType = 'Group')      
                                                BEGIN      
                                                                exec sp_send_email_for_group @subject, @SendTo, @Template      
                                                END      
                                                ELSE      
                                                BEGIN      
                                                                IF (@SendType = 'Requestor')      
                                                                BEGIN                                                         
                                                                                exec sp_send_email_for_single @subject, @Requestor, @Template      
                                                                END      
                      
                                                                IF (@SendType = 'Thankyou')      
                                                                BEGIN      
                                                                                exec sp_send_email_for_single @subject, @LastPic, @Template      
                                                                END      
                                                                      
                                                                IF (@SendType = 'NextApprover')      
                                                                BEGIN      
                                                                                IF (@NextAssignType = 'Group')      
                                                                                BEGIN      
                         exec sp_send_email_for_group @subject, @SendTo, @Template      
                                                                                END      
                                                                                ELSE      
                                                                            BEGIN      
                                                                                   IF(@NextPic IS NULL)      
     BEGIN      
                                                                                                SET @NextPic = @LastPic;      
                                                                      END      
                                                                                                exec sp_send_email_for_single @subject, @NextPic, @Template      
                                                                                                      
                                                                                END      
                                                                END      
                      
                                                END      
                                                FETCH NEXT FROM csr INTO @IdFlow, @IdStep, @Status, @SendType, @SendTo, @Name, @Subject, @Template, @Requestor, @NextPic, @LastPic, @NextAssignType      
                                END      
                                CLOSE csr      
                                DEALLOCATE csr      
                END      
      
                IF @TypeFlow = 'RG'      
                BEGIN      
       
                DECLARE csr CURSOR       
                FOR       
                                SELECT       
                                    t0.IdFlow, t0.IdStep, t0.[Status], t1.SendType, t1.SendTo,   
         t1.[Name], t1.[Subject], t1.Template, t0.CreateBy, t0.NextAssignTo,   
         t0.Pic, t0.NextAssignType       
                                FROM fn_get_gr_request_list_all() t0     
                                LEFT JOIN NotifikasiEmail t1 on t1.IdFlow = t0.idFlow and t1.idStep = t0.idStep and t1.[Status] like '%' + t0.[Status] + '%'      
                                WHERE t0.IdGr = @RequestID      
                                      
                                OPEN csr  
          
                                                FETCH NEXT FROM csr      
              
                                                INTO @IdFlow, @IdStep, @Status, @SendType, @SendTo, @Name, @Subject, @Template, @Requestor, @NextPic, @LastPic, @NextAssignType      
                                                WHILE @@FETCH_STATUS = 0      
                                                BEGIN      
      
                                                SELECT @subject = dbo.[fn_proccess_email_template]('RG', @RequestID, @subject, @TypeDoc, @LastPic)      
                                                SELECT @Template = dbo.[fn_proccess_email_template]('RG', @RequestID, @Template, @TypeDoc, @LastPic)      
  
                                                ---- Send email      
                                                IF (@SendType = 'Group')      
                                                BEGIN      
                                                                exec sp_send_email_for_group @subject, @SendTo, @Template      
                                                END      
                                                ELSE      
                                                BEGIN     
                                                                IF (@SendType = 'Requestor')      
                                                                BEGIN            
                                                                                exec sp_send_email_for_single @subject, @Requestor, @Template      
                                                                END      
                      
                                                               IF (@SendType = 'Thankyou')                                                                         BEGIN      
                                                                                exec sp_send_email_for_single @subject, @LastPic, @Template      
                END      
      
                                                                IF (@SendType = 'LastApprover')      
                                                                BEGIN   
                     exec sp_send_email_for_single @subject, @LastPic, @Template      
                END      
                                                                                                      
                                                                IF (@SendType = 'NextApprover')      
                                                                BEGIN   
                                                                                IF (@NextAssignType = 'Group')      
                                                                                BEGIN      
                                                                                                exec sp_send_email_for_group @subject, @SendTo,                  @Template      
                                                                                END      
                                                                                ELSE      
                                                                                BEGIN      
                                                                                                IF(@NextPic IS NULL)      
                                                                                                BEGIN      
                                                                                                                SET @NextPic = @LastPic;      
                                                                                                END      
                                                                                                exec sp_send_email_for_single @subject, @NextPic,                 @Template      
                                                                      
                                                                                END      
                                                                END             
                                                END      
                                                                                                                                                      
                                                FETCH NEXT FROM csr INTO @IdFlow, @IdStep, @Status, @SendType, @SendTo, @Name, @Subject, @Template, @Requestor, @NextPic, @LastPic, @NextAssignType      
                                END      
                                CLOSE csr      
                                DEALLOCATE csr      
                END      
END      
      

go


update NotifikasiEmail 
set Template = '<body style="font-family: verdana, helvetica, sans-serif;font-size: 10pt;">  <span>Dear @ApproverName,</span><br /><br />  <span>You have one Export GR form Approval Request for your review & approval in 24 hours after received this request.</span><br /><br />  <table border = ''0'' style="font-family: verdana, helvetica, sans-serif;font-size: 10pt;">   <tr>    <td>Export GR Number&nbsp;&nbsp;</td>    <td>: @RequestNo</td>   </tr>   <tr>    <td>Export GR Date</td>    <td>: @CreatedDate</td>   </tr>   <tr>    <td>Requestor Name</td>    <td>: @RequestorName</td>   </tr>    <tr>     <td>No Do</td>     <td>: @DO</td>    </tr>    <tr>     <td>No DA</td>     <td>: @DA</td>    </tr>    <tr>     <td>Branch</td>     <td>: @CIPLBranchName</td>    </tr>    <tr>     <td>CiplNo</td>     <td>: @CiplNo</td>    </tr>  </table><br />  <p>"Please coordinate with your warehouse team to create Cargo List" </p><br />  <span>Kindly  please Log to:</span> <br /><br />  <ol type="a">   <li>By mobile/Smart phone (Internet connection) click <a href="@MobileLink">here</a> for further action   <li>By desktop click <a href="@DesktopLink">here</a> for further action  </ol><br />  <span>Best regards,</span><br /><span>EMCS Application</span>  <br /><br />  <span style="font-size: 9pt;"><i>Do not reply this email, this email is automatically generated by system</i></span>  </body>'
where ID = 163


go



update NotifikasiEmail
set Status = 'Waiting Approval'
where IdStep = 15

