@model  App.Data.Domain.CategoryCode
@{
    var mode = ViewBag.crudMode;
    var title = mode == "I" ? "Add" : (mode == "U" ? "Update" : "Delete");
}

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
    <h4 class="modal-title" id="myModalLabel">@title Category Code</h4>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="modal-body">
        <div class="col-lg-12">
            <!-- Default input -->
            <div class="col-lg-8">

                <div class="form-group">
                    <label class="control-label col-md-3 col-xs-12">Category</label>
                    <div class="input-group col-md-9 col-xs-12">
                        @Html.TextBoxFor(m => m.Category, new { @class = "form-control required", placeholder = "Category" })
                        <div>@Html.ValidationMessageFor(m => m.Category)</div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-3 col-xs-12">Code</label>
                    <div class="input-group col-md-9 col-xs-12">
                        @Html.TextBoxFor(m => m.Code, new { @class = "form-control required", placeholder = "Code" })
                        <div>@Html.ValidationMessageFor(m => m.Code)</div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-3 col-xs-12">Description 1</label>
                    <div class="input-group col-md-9 col-xs-12">
                        @Html.TextAreaFor(m => m.Description1, new { @class = "form-control required", placeholder = "Description 1" })
                        <div>@Html.ValidationMessageFor(m => m.Description1)</div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-3 col-xs-12">Description 2</label>
                    <div class="input-group col-md-9 col-xs-12">
                        @Html.TextAreaFor(m => m.Description2, new { @class = "form-control", placeholder = "Description 2" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-3 col-xs-12">Ordering</label>
                    <div class="input-group col-md-9 col-xs-12">
                        @Html.TextBoxFor(m => m.Ordering, new { @class = "form-control required", placeholder = "Ordering", @type = "number" })
                        <div>@Html.ValidationMessageFor(m => m.Ordering)</div>
                    </div>
                </div>
            </div>
            <!-- Default input -->
        </div>
        <div class="nav-tabs-custom nav-justified tabs-style-underline">
            <ul class="nav nav-justified nav-tabs "></ul>
            <!-- /.tab-content -->
        </div>

    </div>


    <div class="modal-footer">
        <span id="progress" class="text-center" style="display: none;">
            <img src="@Url.Content("~/Content/images/wait.gif")" alt="wait" />
            Wait..
        </span>
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        @if (mode == "I")
        {
            <button type="submit" class="btn btn-success"><i class="fa fa-save"></i> Save</button>
        }
        else if (mode == "U")
        {
            <button type="submit" class="btn btn-success"><i class="fa fa-save"></i> Update</button>
        }
        else
        {
            <button type="submit" class="btn btn-danger"><i class="fa fa-save"></i> Delete</button>
        }

    </div>

    <input type="hidden" id="catOld" name="catOld" value="@Model.Category" />
    <input type="hidden" id="codeOld" name="codeOld" value="@Model.Code" />

    @Html.HiddenFor(a => a.CreateBy)
    @Html.HiddenFor(a => a.CreateDate)
    @Html.HiddenFor(a => a.UpdateBy)
    @Html.HiddenFor(a => a.UpdateDate)
}

<script>
    var mode = '@mode';
    if (mode != 'I') {
        $("#Category").attr('readonly', 'readonly');
        $("#Code").attr('readonly', 'readonly');
    }

    $(document).ready(function () {
        $("form").removeData("validator");
        $("form").removeData("unobtrusiveValidation");
        $.validator.unobtrusive.parse("form");
    });
</script>



