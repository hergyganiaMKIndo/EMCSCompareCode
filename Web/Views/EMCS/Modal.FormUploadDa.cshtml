@model  App.Web.Models.EMCS.GoodReceiveItemModel
@{
    var mode = ViewBag.crudMode;
    var title = mode == "I" ? "Add" : (mode == "U" ? "Update" : "Delete");
    var statusList = new List<string>();
}

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
    <h4 class="modal-title" id="myModalLabel"><i class="fa @((mode == "I") ? "fa-plus-circle" : "fa-upload")"></i>&nbsp;@title DA Document</h4>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="modal-body">
        <div class="row">
            <div class="col-lg-12">
                <div class="row text-center divUploadFile dropzone" id="FormUploadContainer">
                </div>
            </div>
        </div>
    </div>

    <div class="modal-footer">
        <span id="progress" class="text-center" style="display: none;">
            <img alt="Waiting Image" src="@Url.Content("~/Content/images/wait.gif")" />
            Wait..
        </span>
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        @if (mode == "I")
        {
            <button type="submit" class="btn btn-success hidden"><i class="fa fa-save"></i> Save</button>
        }
        else if (mode == "U")
        {
            <button type="submit" class="btn btn-success hidden"><i class="fa fa-save"></i> Update</button>
        }
        else
        {
            <button type="submit" class="btn btn-danger hidden"><i class="fa fa-save"></i> Delete</button>
        }

    </div>

    @Html.HiddenFor(a => a.Id, new { @class = "hidden", @Id = "ItemIdGr" })
}

<div id="template-dropzone" class="hidden">
    <div id="template" class="file-row text-left" style="padding:20px;">
        <!-- This is used as the file preview template -->
        <div class="col-md-2">
            <div class="row">
                <span class="preview">
                    <img style="width:65%;height:auto;" data-dz-thumbnail>
                </span>
            </div>
        </div>
        <div>
            <p class="name" data-dz-name></p>
            <strong class="error text-danger" data-dz-errormessage></strong>
        </div>
        <div class="col-md-10">
            <div class="row">
                <p class="size" data-dz-size></p>
                <div class="row">
                    <div class="col-md-8">
                        <div class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0">
                            <div class="progress-bar progress-bar-success" style="width:0%;" data-dz-uploadprogress></div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <span data-dz-uploadprogress id="progressPercent"></span>
                    </div>
                </div>
            </div>
        </div>
        <div id="actions">
            <button data-dz-remove class="btn btn-sm btn-danger delete">
                <i class="glyphicon glyphicon-trash"></i>
                <span>Delete</span>
            </button>
        </div>
        <div class="clearfix">&nbsp;</div>
    </div>
</div>

<script src="~/Scripts.app/EMCS/dropzone.js"></script>
<script>
    var mode = '@mode';
    if (mode != 'I')
        $("#ID").attr('readonly', 'readonly');

    Dropzone.autoDiscover = false;

    var myDropzone = new Dropzone("#FormUploadContainer", { // Make the bodyFormUpload a dropzone
        url: "/EMCS/UploadGrItem", // Set the url
        thumbnailHeight: 100,
        thumbnailWeight: 100,
        method: 'POST',
        acceptedFiles: '.pdf, .jpeg, .jpg, .png',
        filesizeBase: 1024,
        dictDefaultMessage: "<h4>Drop DA Document Here...</h4>",
        autoProcessQueue: true,
        maxFiles: 1,
        maxFilesize: 10, // MB
        parallelUploads: 1,
        previewTemplate: $("#template-dropzone").html(),
        uploadMultiple: false,
        //previewsContainer: "#previews", // Define the container to display the previews
        //clickable: ".fileinput-button" // Define the element that should be used as click trigger to select files.
    });

    myDropzone.on("addedfile", function (file) {
        // Hookup the start button
        $("#actions .start").on("click", function () {
            myDropzone.enqueueFile(file);
        });
        $("#placeholderUpload").hide();
    });

    myDropzone.on("totaluploadprogress", function (progress) {
        $("#total-progress .progress-bar").css("width", progress + "%");
        $("#progressPercent").html(progress + "%");
    });

    myDropzone.on("sending", function (file, xhr, formData) {
        formData.append("ID", @Model.Id);
        // Show the total progress bar when upload starts
        $("#total-progress").css("opacity", 1);
        // And disable the start button
        $("#actions .delete").attr("disabled", "disabled");
        $(".start").attr("disabled", "disabled");
    });

    myDropzone.on("complete", function (resp) {
        if (resp.status === "success") {
            var respText = resp.xhr.response;
            var respData = JSON.parse(respText);
            var failedList = respData.failedList;

            $("#actions .delete").prop("disabled", false);
            var type = respData.status ? "success" : "error";

            $("[name=refresh]").trigger('click');
            //$tableContainer.edatagrid("reload");
            //myDropzone.removeAllFiles(true);
        }
    });

    // Hide the total progress bar when nothing's uploading anymore
    myDropzone.on("queuecomplete", function (progress) {
        $("#total-progress").css("opacity", "0");
        //$tableContainer.edatagrid("reload");
        setTimeout(function () {
            myDropzone.removeAllFiles(true);
        }, 400);
    });

    // Setup the buttons for all transfers
    // The "add files" button doesn't need to be setup because the config
    // `clickable` has already been specified.
    $("#actions .start").on("click", function () {
        myDropzone.enqueueFiles(myDropzone.getFilesWithStatus(Dropzone.QUEUED));
    });

    $("#actions .cancel").on("click", function () {
        myDropzone.removeAllFiles(true);
        $("#placeholderUpload").hide();
    });

    $(document).ready(function () {
        $(".date").datepicker({
            autoclose: true,
            format: "dd M yyyy"
        });
        $("form").removeData("validator");
        $("form").removeData("unobtrusiveValidation");
        $.validator.unobtrusive.parse("form");
    });
</script>



