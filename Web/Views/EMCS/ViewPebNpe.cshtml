@model  App.Web.Models.EMCS.PebNpeModel
@{
    ViewBag.Title = "Approve PEB NPE";
    ViewBag.TypeReq = "NpePeb";
    ViewBag.IdReq = Model.NpePeb.IdCl;
    ViewBag.IdStep = Model.Request.IdStep;
    ViewBag.Id = Model.Data.Id.ToString();
}

@Styles.Render("~/Content/EMCS/Custom.css")
@Styles.Render("~/Content/EMCS/SweetAlert/sweetalert2.min.css")
<style>
    .help-block {
        color: #a94442;
        display: inline;
        font-weight: bolder;
    }

    .customSwalBtn {
        background-color: rgba(214,130,47,1.00);
        border-left-color: rgba(214,130,47,1.00);
        border-right-color: rgba(214,130,47,1.00);
        border: 0;
        border-radius: 3px;
        box-shadow: none;
        color: #fff;
        cursor: pointer;
        font-size: 17px;
        font-weight: 500;
        margin: 30px 5px 0px 5px;
        padding: 10px 32px;
    }
</style>
<div class="col-md-12">
    @Html.Partial("~/Views/EMCS/Wizard.cshtml")
</div>
<div class="col-md-12">
    <form id="FormUploadNpePeb">
        <div class="tab box-warning" role="tabpanel" style="min-height:555px;box-shadow:none !important;background:none;">
            <ul class="nav nav-tabs" role="tablist">
                <li role="presentation" class="active"><a href="#tab-npepeb-approve" aria-controls="home" role="tab" data-toggle="tab">Form</a></li>
                <li role="presentation">
                    <a style="z-index:4" href="#history" aria-controls="profile" role="tab" data-toggle="tab">Action History</a>
                </li>
                <li role="presentation">
                    <a style="z-index:3" href="#problemhistory" aria-controls="profile" role="tab" data-toggle="tab">Problem History</a>
                </li>
                <li role="presentation">
                    <a href="#Changehistory" aria-controls="profile" role="tab" data-toggle="tab" style="z-index:2;">Change History</a>
                </li>
            </ul>
            <div class="tab-content tabs-custom">
                <div role="tabpanel" class="tab-pane active" id="tab-npepeb-approve">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group hide">
                                <label class="control-label col-lg-4 col-xs-4">ID</label>
                                <div class="input-group col-lg-8 col-xs-8">
                                    <input type="text" class="form-control" id="CargoID" name="CargoID" value="@Model.Data.Id" disabled>
                                </div>
                            </div>
                            <div class="form-group hide">
                                <label class="control-label col-lg-4 col-xs-4">ID NPE / PEB</label>
                                <div class="input-group col-lg-8 col-xs-8">
                                    @Html.TextBoxFor(m => m.NpePeb.Id, new { @class = "form-control disabled", @id = "IdNpePeb" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-lg-4 col-xs-4">No Aju PEB</label>
                                <div class="input-group col-xs-8 col-lg-8">
                                    @Html.TextBoxFor(m => m.NpePeb.AjuNumber, new { @class = "form-control", @id = "AjuNumber", @readonly = "readonly", @placeholder = "No Aju PEB", @name = "AjuNo" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-lg-4 col-xs-4" id="cc_num">Date & Time Aju</label>
                                <div class="input-group col-lg-8 col-xs-8">
                                    @Html.EditorFor(m => m.NpePeb.AjuDate, new { htmlAttributes = new { @class = "form-control date", @id = "AjuDate", @readonly = "readonly", @placeholder = "Date", @name = "AjuDate" } })
                                    <span class="input-group-addon">
                                        <i class="fa fa-calendar"></i>
                                    </span>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-lg-4 col-xs-4">NPE Number</label>
                                <div class="input-group col-lg-8 col-xs-8">
                                    @Html.TextBoxFor(m => m.NpePeb.NpeNumber, new { @class = "form-control", @id = "NpeNumber", @readonly = "readonly", @placeholder = "NPE Number", @name = "NpeNumber" })
                                    @*<input type="text" class="form-control" id="NpeNumber" autocomplete="off" name="NpeNumber" required placeholder="NPE Number">*@
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-lg-4 col-xs-4">Date & Time NPE</label>
                                <div class="input-group col-lg-8 col-xs-8">
                                    @Html.EditorFor(m => m.NpePeb.NpeDate, new { htmlAttributes = new { @class = "form-control date", @id = "NpeDate", @readonly = "readonly", @placeholder = "Date", @name = "NpeDate" } })
                                    @*<input type="text" class="form-control date" id="NpeDate" autocomplete="off" name="NpeDate" required placeholder="Date">*@
                                    <div class="input-group-addon cal">
                                        <i class="fa fa-calendar"></i>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-lg-4 col-xs-4">Date & Time Submit NPE to Custom Office</label>
                                <div class="input-group col-lg-8 col-xs-8">
                                    @Html.EditorFor(m => m.NpePeb.NpeDateSubmitToCustomOffice, new { htmlAttributes = new { @class = "form-control date", @id = "NpeDateSubmitToCustomOffice", @readonly = "readonly", @placeholder = "Date", @name = "NpeDateSubmitToCustomOffice" } })
                                    @*<input type="text" class="form-control date" id="NpeDate" autocomplete="off" name="NpeDate" required placeholder="Date">*@
                                    <div class="input-group-addon cal">
                                        <i class="fa fa-calendar"></i>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-lg-4 col-xs-4">No Pen</label>
                                <div class="input-group col-lg-8 col-xs-8">
                                    @Html.TextBoxFor(m => m.NpePeb.RegistrationNumber, new { @class = "form-control", @id = "RegistrationNumber", @placeholder = "Registration Number", @name = "RegistrationNumber" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-lg-4 col-xs-4">NPWP</label>
                                <div class="input-group col-lg-8 col-xs-8">
                                    @Html.TextBoxFor(m => m.NpePeb.Npwp, new { @class = "form-control", @id = "NpeNpwp", @readonly = "readonly", @placeholder = "Npwp", @name = "NpeNpwp", Value = "020258737" })
                                    @*<input type="text" class="form-control" id="NpeNpwp" autocomplete="off" name="NpeNpwp" required placeholder="NPWP" value="020258737" disabled>*@
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-lg-4 col-xs-4">Receiver Name DHE BI</label>
                                <div class="input-group col-lg-8 col-xs-8">
                                    @Html.TextBoxFor(m => m.NpePeb.ReceiverName, new { @class = "form-control", @id = "NpeReceiver", @readonly = "readonly", @placeholder = "Receiver", @name = "NpeReceiver", Value = "TRAKINDO UTAMA" })
                                    @*<input type="text" class="form-control" id="NpeReceiver" autocomplete="off" name="NpeReceiver" required placeholder="Receiver Name" value="TRAKINDO UTAMA" disabled>*@
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-lg-4 col-xs-4">Password Pabean Office</label>
                                <div class="input-group col-lg-8 col-xs-8">
                                    @Html.TextBoxFor(m => m.NpePeb.PassPabeanOffice, new { @class = "form-control required hide", @id = "GetPasswordPabean", @placeholder = "Password Pabean Office", @name = "GetPasswordPabean" })
                                    <select class="select2" id="NpePass" name="NpePass" required disabled></select>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-lg-4 col-xs-4">DHE Score</label>
                                <div class="input-group col-lg-8 col-xs-8">
                                    @Html.TextBoxFor(m => m.NpePeb.Dhe, new { @class = "form-control formatCurrency text-right", @id = "NpeDHE", @readonly = "readonly", @placeholder = "DHE Score", @name = "NpeDHE" })
                                    @*<input type="text" class="form-control decimal" id="NpeDHE" autocomplete="off" name="NpeDHE" required placeholder="DHE Score">*@
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-lg-4 col-xs-4">PEB / FOB Value</label>
                                <div class="input-group col-lg-8 col-xs-8">
                                    @Html.TextBoxFor(m => m.NpePeb.PebFob, new { @class = "form-control formatCurrency text-right", @id = "NpeFob", @readonly = "readonly", @placeholder = "PEB / FOB Score", @name = "NpeFob" })
                                    @*<input type="text" class="form-control decimal" id="NpeFob" autocomplete="off" name="NpeFob" required placeholder="PEB / FOB Score">*@
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-lg-4 col-xs-4">Type of Currency (Valuta)</label>
                                <div class="input-group col-lg-8 col-xs-8">
                                    @Html.TextBoxFor(m => m.NpePeb.Valuta, new { @class = "form-control required hide", @id = "GetNpeValuta", @placeholder = "Valuta", @name = "GetNpeValuta", @readonly = "readonly" })
                                    <select class="select2" id="NpeValuta" name="NpeValuta" required disabled></select>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-lg-4 col-xs-4">Customs Office Address</label>
                                <div class="input-group col-lg-8 col-xs-8">
                                    @Html.TextAreaFor(m => m.NpePeb.DescriptionPassword, new { @class = "form-control", @id = "NpeDescPass", @readonly = "readonly", @placeholder = "Customs Office Address", @name = "NpeDescPass" })
                                    @*<textarea type="text" class="form-control" id="NpeDescPass" autocomplete="off" name="NpeDescPass" required placeholder="Description Password"></textarea>*@
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-lg-4 col-xs-4">Temporary Storage</label>
                                <div class="input-group col-lg-8 col-xs-8">
                                    @Html.TextBoxFor(m => m.NpePeb.WarehouseLocation, new { @class = "form-control", @id = "NpeWarehouse", @readonly = "readonly", @placeholder = "Warehouse Location", @name = "NpeWarehouse" })
                                    @*<input type="text" class="form-control" id="NpeWarehouse" autocomplete="off" name="NpeWarehouse" required placeholder="Warehouse" />*@
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-lg-4 col-xs-4">Freight Payment</label>
                                <div class="input-group col-lg-8 col-xs-8">
                                    @Html.TextBoxFor(m => m.NpePeb.FreightPayment, new { @class = "form-control formatCurrency text-right", @id = "NpeFreightPayment", @readonly = "readonly", @placeholder = "Freight Payment", @name = "NpeFreightPayment" })
                                    @*<input type="text" class="form-control decimal" id="NpeFreightPayment" autocomplete="off" name="NpeFreightPayment" required placeholder="Freight Payment" />*@
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-lg-4 col-xs-4">Insurance Amount</label>
                                <div class="input-group col-lg-8 col-xs-8">
                                    @Html.TextBoxFor(m => m.NpePeb.InsuranceAmount, new { @class = "form-control formatCurrency text-right", @id = "NpeInsuranceAmount", @readonly = "readonly", @placeholder = "Insurance Amount", @name = "NpeInsuranceAmount" })
                                    @*<input type="text" class="form-control decimal" id="NpeInsuranceAmount" autocomplete="off" name="NpeInsuranceAmount" required placeholder="Insurance Amount" />*@
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-lg-4 col-xs-4">Rate</label>
                                <div class="input-group col-lg-8 col-xs-8">
                                    @Html.TextBoxFor(m => m.NpePeb.Rate, new { @class = "form-control formatCurrency text-right", @id = "NpeRate", @readonly = "readonly", @placeholder = "Rate", @name = "NpeRate" })
                                    @*<input type="text" class="form-control decimal" id="NpeRate" autocomplete="off" name="NpeRate" required placeholder="Rate" />*@
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-lg-4 col-xs-4">PEB / NPE Document</label>

                                <div class="radio">
                                    <label>
                                        @*<input class="flagCompleteDoc" type="radio" name="flagCompleteDoc" value="true">Ya*@
                                        @Html.RadioButtonFor(m => m.NpePeb.DocumentComplete, "true", new { @class = "flagCompleteDoc required", Name = "flagCompleteDoc" }) Ya
                                    </label>
                                </div>
                                <div class="radio">
                                    <label>
                                        @*<input class="flagCompleteDoc" type="radio" name="flagCompleteDoc" value="false">Tidak*@
                                        @Html.RadioButtonFor(m => m.NpePeb.DocumentComplete, "false", new { @class = "flagCompleteDoc required", Name = "flagCompleteDoc" }) Tidak
                                    </label>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-lg-4 col-xs-4 required">Draft PEB</label>
                                <div class="radio">
                                    <label>
                                        @*<input class="flagCompleteDoc" type="radio" name="flagCompleteDoc" value="true">Ya*@
                                        @Html.RadioButtonFor(m => m.NpePeb.DraftPeb, "true", new { @class = "flagDraftPeb required", Name = "flagDraftPeb" }) Ya
                                    </label>
                                </div>
                                <div class="radio">
                                    <label>
                                        @*<input class="flagCompleteDoc" type="radio" name="flagCompleteDoc" value="false">Tidak*@
                                        @Html.RadioButtonFor(m => m.NpePeb.DraftPeb, "false", new { @class = "flagDraftPeb required", Name = "flagDraftPeb" }) Tidak
                                    </label>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <table style="width:100%;" border="0" class="table table-bordered">
                                <thead>
                                    <tr>
                                        <th style="height:40px;vertical-align:middle;text-align:center;width:80%">Name</th>
                                        <th style="height:40px;vertical-align:middle;text-align:center;width:20%">Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr id="trCompleteDoc">
                                        <td>
                                            <div class="form-group div-mandatory">
                                                <label class="control-label" id="label-document-SK"><strong>PEB / NPE Document</strong></label>
                                                <input type="text" class="hide" name="UrlDocumentCOMPLETEDOCUMENT" id="url-document-COMPLETEDOCUMENT" required />
                                            </div>
                                        </td>
                                        <td class="text-center">
                                            <button class="btn btn-default btn-xs preview-document" id="preview-document-COMPLETEDOCUMENT" type="button" data-toggle="tooltip" title="View Document!"><i class="fa fa-search"></i></button>
                                            <a href="#" class="btn btn-success btn-xs DownloadDocument" id="download-document-COMPLETEDOCUMENT" type="button" target="_blank" data-toggle="tooltip" title="Download!"><i class="fa fa-download"></i></a>
                                            <div id="previews">
                                                <div id="template" class="template file-row dz-image-preview">
                                                    <div>
                                                        <p class="name" data-dz-name=""></p>
                                                    </div>
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                    <tr id="trDraftPeb">
                                        <td>
                                            <div class="form-group div-mandatory">
                                                <label class="control-label" id="label-document-SK"><strong>Draft Peb</strong></label>
                                                <input type="text" class="hide" name="UrlDocumentDRAFTPEB" id="url-document-DRAFTPEB" required />
                                            </div>
                                        </td>
                                        <td class="text-center">
                                            <button class="btn btn-default btn-xs preview-document" id="preview-document-DRAFTPEB" type="button" data-toggle="tooltip" title="View Document!"><i class="fa fa-search"></i></button>
                                            <a href="#" class="btn btn-success btn-xs DownloadDocument" id="download-document-DRAFTPEB" type="button" target="_blank" data-toggle="tooltip" title="Download!"><i class="fa fa-download"></i></a>
                                            <div id="previews">
                                                <div id="template" class="template file-row dz-image-preview">
                                                    <div>
                                                        <p class="name" data-dz-name=""></p>
                                                    </div>
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                    @if (ViewBag.Status == "CancelApproval" || ViewBag.Status == "Cancel" || Model.NpePeb.IsCancelled == 1 || Model.NpePeb.IsCancelled == 2)
                                    {
                                        <tr id="trCancelPeb">
                                            <td>
                                                <div class="form-group div-mandatory">
                                                    <label class="control-label" id="label-document-SK"><strong>Cancel Peb</strong></label>
                                                    <input type="text" class="hide" name="UrlDocumentCANCELPEB" id="url-document-CANCELPEB" required />
                                                </div>
                                            </td>
                                            <td class="text-center">
                                                <button type="button" class="btn btn-primary btn-xs upload" data-toggle="modal" data-target="#myModalUploadPlace" title="Upload"><i class="fa fa-upload"></i></button>
                                                <button class="btn btn-default btn-xs preview-Canceldocument" id="preview-document-CANCELPEB" type="button" data-toggle="tooltip" title="View Document!"><i class="fa fa-search"></i></button>
                                                <button class="btn btn-success btn-xs DownloadCancelDocument" id="download-document-CANCELPEB" type="button" target="_blank" data-toggle="tooltip" title="Download!"><i class="fa fa-download"></i></button>

                                                <div id="previews">
                                                    <div id="template" class="template file-row dz-image-preview">
                                                        <div>
                                                            <p class="name" data-dz-name=""></p>
                                                        </div>
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                            <iframe id="DocumentShow" src="" style="width:100%; height:550px;" title="Document Show"></iframe>
                        </div>
                    </div>
                    <div style=" width: 8%; float: right; margin-right: 0px; font-family: Arial, Helvetica, sans-serif; font-size: 12px; overflow: auto;"><a class="btn btn-danger" id="Cancel">Cancel</a></div>
                    <div style=" width: 8%; float: right; margin-right: 0px; font-family: Arial, Helvetica, sans-serif; font-size: 12px; overflow: auto;"><a class="btn btn-danger" id="ConfirmCancel">Confirm Cancel</a></div>
                    @if (ViewBag.CountDays == 3)
                    {
                        <div style=" width: 4%; float: right; margin-right: 0px; font-family: Arial, Helvetica, sans-serif; font-size: 12px; overflow: auto;"><a class="btn btn-primary" href="~/EMCS/NpePebList" id="BackList">Back</a></div>
                    }
                    else
                    {
                        <div style=" width: 4%; float: right; margin-right: 0px; font-family: Arial, Helvetica, sans-serif; font-size: 12px; overflow: auto;"><a class="btn btn-primary" id="Back">Back</a></div>

                    }
                    <div style=" width: 17%; float: right; margin-right: 0px; font-family: Arial, Helvetica, sans-serif; font-size: 12px; overflow: auto; padding-top: 0px;"><a class="btn btn-success" id="requestdocupload">Approve And Request For Upload Document</a></div>
                </div>
                <div role="tabpanel" class="tab-pane" id="history">
                    <div class="row">
                        <div class="col-xs-12 table-responsive">
                            <input type="hidden" name="idCargo" id="idCargo" value="@Model.Data.Id" />
                            <table id="tableCargoHistory" data-toolbar=".toolbar" class="table table-bordered"></table>
                        </div>
                    </div>
                </div>

                <div role="tabpanel" class="tab-pane" id="problemhistory">
                    <div class="row">
                        <div class="col-xs-12 table-responsive">
                            <table id="tableCargoProblemHistory" data-toolbar=".toolbar" class="table table-bordered"></table>
                        </div>
                    </div>
                </div>
                <div role="tabpanel" class="tab-pane" id="Changehistory">
                    <div class="row">
                        <div class="col-xs-12 table-responsive">
                            @*<input type="hidden" name="IdGR" id="IdGR" value="@Model.Data.Id" />*@
                            <table id="tableNpePebHistory" data-toolbar=".toolbar" class="table table-bordered"></table>
                        </div>                 <!-- /.col -->
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>
<div id='myModalUploadPlace' class='modal fade in'>
    <div class="modal-dialog" style="width:800px">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title"><i class="fa fa-edit"></i>&nbsp;Upload File Document</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="row text-center divUploadFile dropzone" id="FormUploadDocument">
                        </div>
                    </div>
                    <div class="form-group hidden">
                        <label class="control-label col-md-3 col-xs-12">IdDocument</label>
                        <div class="input-group col-md-9 col-xs-12">
                            <input type="text" class="form-control" id="IdDocumentUpload" name="IdDocumentUpload">
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>

            <div id="template-dropzone" class="hidden">
                <div id="template" class="file-row text-left" style="padding:20px;">
                    <!-- This is used as the file preview template -->
                    <div class="col-md-2">
                        <div class="row">
                            <span class="preview">
                                <img alt="Data Thumbnail" style="width:65%;height:auto;" data-dz-thumbnail>
                            </span>
                        </div>
                    </div>
                    <div>
                        <p class="name" data-dz-name></p>
                        <strong class="error text-danger" data-dz-errormessage></strong>
                    </div>
                    <div class="col-md-10">
                        <div class="row">
                            <p class="size" data-dz-size></p>
                            <div class="row">
                                <div class="col-md-8">
                                    <div class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0">
                                        <div class="progress-bar progress-bar-success" style="width:0%;" data-dz-uploadprogress></div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <span data-dz-uploadprogress id="progressPercent"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="clearfix">&nbsp;</div>
                </div>
            </div>
        </div>
    </div>
</div>
<input type="hidden" name="FileName" id="FileName" value="@ViewBag.FileName" />
<input type="hidden" name="Status" id="Status" value="@ViewBag.Status" />
<input type="hidden" name="CountDay" id="CountDay" value="@ViewBag.CountDays" />
<input type="hidden" name="IsCancelled" id="IsCancelled" value="@Model.NpePeb.IsCancelled" />
<input type="hidden" name="RoleId" id="RoleId" value="@ViewBag.RoleId" />
@Html.Partial("Modal.FormProblem")
<script>
        var wizardState = "@ViewBag.WizardData.Progress";
        var CargoTypeName = "@Model.Data.CargoTypeName";
</script>
@section scripts{
    <script src="@Url.Content("~/Content/EMCS/DropZone/dropzone.js")"></script>
    <script src="@Url.Content("~/Content/EMCS/SweetAlert/sweetalert2.min.js")"></script>
    <script src="@Url.Content("~/Scripts.app/EMCS/function.cshtml.js")"></script>
    <script src="@Url.Content("~/Scripts.app/EMCS/mytask/TaskNpePeb.cshtml.js")"></script>
    <script src="@Url.Content("~/Scripts.app/EMCS/transaction/CargoHistory.cshtml.js")"></script>
    <script src="@Url.Content("~/Scripts.app/EMCS/Custom.js")"></script>
    @Scripts.Render("~/Scripts.app/EMCS/FormProblem.cshtml.js")
    <script src="@Url.Content("~/Scripts.app/EMCS/mytask/PebNpe.cshtml.js")"></script>
    <script>
        $(document).ready(function () {
            tableNpePebHistory()
            if ($('#RoleId').val() == 8 && ($('#IsCancelled').val() == "0" || $('#Status').val() == 'CancelRequest')) {
                $('#requestdocupload').show();
                $('#Back').show();
            }
            else {
                $('#requestdocupload').hide();
                $('#Back').show();
            }
            if ($('#CountDay').val() <= 2 && $('#CountDay').val() != "" && $('#Status').val() != 'CancelRequest' && $('#Status').val() != 'CancelApproval' && $('#Status').val() != 'Cancel' && $('#IsCancelled').val() == null) {

                $('#Cancel').show();
                $('#ConfirmCancel').hide();
            }
            if ($('#CountDay').val() <= 2 && $('#CountDay').val() != "" && ($('#IsCancelled').val() == null || $('#IsCancelled').val() == "")) {

                $('#Cancel').show();
                $('#ConfirmCancel').hide();
            }
            else {
                $('#Cancel').hide();
                $('#ConfirmCancel').hide();
            }
            if ($('#Status').val() == 'CancelApproval' || $('#IsCancelled').val() == 1) {

                $('#Cancel').hide();
                $('#ConfirmCancel').show();
            }
            if ($('#Status').val() == 'Cancel' || $('#Status').val() == 'CancelRequest' || $('#IsCancelled').val() == 2) {

                $('#Cancel').hide();
                $('#ConfirmCancel').hide();
            }
        })
        $('#Cancel').on('click', function () {

            Swal.fire({
                title: 'Apakah barang sudah berangkat keluar negeri?',
                type: 'question',
                html: "<br>" +
                    '<button type="button" role="button" tabindex="0" class="SwalBtn1 customSwalBtn">' + 'Ya' + '</button>' +
                    '<button type="button" role="button" tabindex="0" class="SwalBtn2 customSwalBtn">' + 'Tidak' + '</button>',
                showCancelButton: false,
                showConfirmButton: false
            })

        })
        $(document).on('click', '.SwalBtn1', function () {

            Swal.fire({
                title: '',
                type: 'warning',
                text: 'Maaf proses ini tidak dapat dilanjut',
            })
        });
        $(document).on('click', '.SwalBtn2', function () {
            Swal.fire({
                title: 'Apakah ingin membatalkan PEB saja atau dengan dokumen pendukungnya(CIPL,DO, RG, CL, SI, SS) ?',
                type: 'question',
                html: "<br>" +
                    '<button type="button" role="button" tabindex="0" class="SwalBtn3 customSwalBtn">' + 'PEB saja' + '</button>' +
                    '<button type="button" role="button" tabindex="0" class="SwalBtn4 customSwalBtn">' + 'PEB dan pendukung' + '</button>',
                showConfirmButton: false
            })

        })
        $(document).on('click', '.SwalBtn3', function () {
            Swal.fire({
                title: '',
                type: 'warning',
                text: 'Apakah anda yakin ingin melanjutkan pembatalan export?',
                showDenyButton: false,
                showCancelButton: 'Tidak',
                confirmButtonText: 'Ya',
            }).then((result) => {
                if (result.value) {
                    Swal.fire({
                        input: 'textarea',
                        allowEscapeKey: false,
                        allowOutsideClick: false,
                        inputPlaceholder: 'Type your notes here...',
                        inputAttributes: {
                            'aria-label': 'Type your notes here'
                        },
                        showCancelButton: false
                    }).then((result) => {
                        var Notes = result.value;
                        var Status = "CancelRequest";
                        var Id = $('#CargoID').val();
                        var data = { Notes: Notes, Status: Status, Id: Id };
                        $.ajax({
                            url: "/EMCS/NpePebCancelAlldocument",
                            type: "POST",
                            data: {
                                Id: data.Id,
                                Status: data.Status,
                                Notes: data.Notes,
                                Detail: data
                            },
                            success: function (resp) {
                                Swal.fire({
                                    title: 'Approve!',
                                    text: 'Batalkan Untuk Permintaan Berhasil',
                                    type: 'success'
                                }).then((result) => {
                                    window.location.href = "/EMCS/MyTask";
                                });
                            }
                        });
                    });
                }
                else {
                    swal.close()
                }
                return false;
            });
        })
        $(document).on('click', '.SwalBtn4', function () {
            Swal.fire({
                title: '',
                type: 'warning',
                text: 'Apakah anda yakin ingin melanjutkan pembatalan export?',
                showDenyButton: false,
                showCancelButton: true,
                confirmButtonText: 'Ya',
            }).then((result) => {
                if (result.value) {
                    Swal.fire({
                        input: 'textarea',
                        allowEscapeKey: false,
                        allowOutsideClick: false,
                        inputPlaceholder: 'Type your notes here...',
                        inputAttributes: {
                            'aria-label': 'Type your notes here'
                        },
                        showCancelButton: false
                    }).then((result) => {
                        var Notes = result.value;
                        var Status = "CancelRequest";
                        var Id = $('#CargoID').val();
                        var data = { Notes: Notes, Status: Status, Id: Id };
                        $.ajax({
                            url: "/EMCS/NpePebCancel",
                            type: "POST",
                            data: {
                                Id: data.Id,
                                Status: data.Status,
                                Notes: data.Notes,
                                Detail: data
                            },
                            success: function (resp) {
                                Swal.fire({
                                    title: 'Approve!',
                                    text: 'Cancel For Request Successfully',
                                    type: 'success'
                                }).then((result) => {
                                    window.location.href = "/EMCS/MyTask";
                                });
                            }
                        });
                    });
                }
                else {
                    swal.close()
                }
                return false;
            });
        })
        $(document).on('click', '#ConfirmCancel', function () {
            $.ajax({
                url: '/EMCS/GetDataById?Id=' + $('#CargoID').val(),
                type: 'POST',
                success: function (data) {

                    if (data.CancelledDocument == null || data.CancelledDocument == "") {

                        Swal.fire({
                            text: 'Silakan Unggah Dokumen',
                            type: 'warning',
                            title: '',
                        })
                    }
                    else {
                        Swal.fire({
                            title: '',
                            type: 'warning',
                            text: 'Apakah Anda Yakin Ingin Membatalkan?',
                            showDenyButton: false,
                            showCancelButton: 'Tidak',
                            confirmButtonText: 'Ya',
                        }).then((result) => {
                            if (result.value) {
                                if ($('#IsCancelled').val() == 1) {
                                    $.ajax({
                                        url: "/EMCS/NpePebCancel",
                                        type: "POST",
                                        data: {
                                            Id: $('#CargoID').val(),
                                            Status: "Cancel",
                                        },
                                        success: function (resp) {
                                            Swal.fire({
                                                title: 'Approve!',
                                                text: 'Batalkan Untuk Permintaan Berhasil',
                                                type: 'success'
                                            }).then((result) => {
                                                window.location.href = "/EMCS/MyTask";
                                            });
                                        }
                                    })
                                }
                                else {
                                    $.ajax({
                                        url: "/EMCS/NpePebCancelAlldocument",
                                        type: "POST",
                                        data: {
                                            Id: $('#CargoID').val(),
                                            Status: "Cancel",
                                        },
                                        success: function (resp) {
                                            Swal.fire({
                                                title: 'Approve!',
                                                text: 'Batalkan Untuk Permintaan Berhasil',
                                                type: 'success'
                                            }).then((result) => {
                                                window.location.href = "/EMCS/MyTask";
                                            });
                                        }
                                    })
                                }

                            }
                            else {
                                swal.close()
                            }
                            return false;
                        });
                    }
                }

            })
        });
        $('#requestdocupload').on('click', function () {
            Swal.fire({
                title: 'Apakah Anda Yakin Ingin Membatalkan?',
                type: 'question',
                showCancelButton: true,
                showConfirmButton: true
            }).then((result) => {
                if (result.value) {
                    if ($('#IsCancelled').val() == 0 && $('#IsCancelled').val() != null && $('#IsCancelled').val() != '') {
                        $.ajax({
                            url: "/EMCS/NpePebCancel",
                            type: "POST",
                            data: {
                                Id: $('#CargoID').val(),
                                Status: "CancelApproval",
                            },
                            success: function (resp) {
                                Swal.fire({
                                    title: 'Approve!',
                                    text: 'Setujui Permintaan Berhasil',
                                    type: 'success'
                                }).then((result) => {
                                    window.location.href = "/EMCS/MyTask";
                                });
                            }
                        })
                    }
                    if ($('#IsCancelled').val() == null || $('#IsCancelled').val() == '') {
                        $.ajax({
                            url: "/EMCS/NpePebCancelAlldocument",
                            type: "POST",
                            data: {
                                Id: $('#CargoID').val(),
                                Status: "CancelApproval",
                            },
                            success: function (resp) {
                                Swal.fire({
                                    title: 'Approve!',
                                    text: 'Setujui Permintaan Berhasil',
                                    type: 'success'
                                }).then((result) => {
                                    window.location.href = "/EMCS/MyTask";
                                });
                            }
                        })
                    }
                }

            })
        })
        $('#Back').on('click', function () {
            window.location.href = "/EMCS/MyTask";
        })

        var myDropzoneDocument = new Dropzone("#FormUploadDocument", {
            url: "/EMCS/CancelDocumentUploadForNpePeb", // Set the url

            thumbnailHeight: 100,
            thumbnailWeight: 100,
            timeout: "80000",
            method: 'POST',
            dictDefaultMessage: "<h4>Click this Section for Browse the Import File.</h4>",
            acceptedFiles: '.pdf, .jpeg, .jpg, .png',
            filesizeBase: 1024,
            autoProcessQueue: true,
            maxFiles: 1,
            maxFilesize: 100, // MB
            parallelUploads: 1,
            previewTemplate: $("#template-dropzone").html(),
            uploadMultiple: false
        });
        myDropzoneDocument.on("addedfile", function (file) {

            // Hookup the start button
            $("#actions .start").on("click", function () {
                myDropzone.enqueueFile(file);
            });
            $("#placeholderUpload").hide();
        });
        myDropzoneDocument.on("totaluploadprogress", function (progress) {
            $("#total-progress .progress-bar").css("width", progress + "%");
            $("#progressPercent").html(progress + "%");
        });
        myDropzoneDocument.on("sending", function (file, xhr, formData) {
            formData.append("id", $("#IdNpePeb").val());
            // Show the total progress bar when upload starts
            $("#total-progress").css("opacity", 1);
            // And disable the start button
            $("#actions .delete").attr("disabled", "disabled");
            $(".start").attr("disabled", "disabled");

        });
        myDropzoneDocument.on("complete", function (resp) {

            if (resp.status === "success") {
                $("#actions .delete").prop("disabled", false);
                if (resp.size >= 9785 && resp.size <= 9800) {
                    swal.fire("Upload Status", "Empty files will not be uploaded.", "error");
                }
                else {

                    var respText = resp.xhr.response;
                    var respData = JSON.parse(respText);
                    console.log(respData);
                    var type = respData.status ? "success" : "error";
                    swal.fire("Upload Status", respData.msg, type);
                    $('.upload').hide();
                    $('.preview-Canceldocument,.DownloadCancelDocument,#ConfirmCancel').show();

                }
            }
        });
        myDropzoneDocument.on("queuecomplete", function (progress) {
            $("#total-progress").css("opacity", "0");
            setTimeout(function () {
                myDropzoneDocument.removeAllFiles(true);
            }, 400);
        });
        $("#actions .start").on("click", function () {
            myDropzoneDocument.enqueueFiles(myDropzoneDocument.getFilesWithStatus(Dropzone.QUEUED));
        });
        $("#actions .cancel").on("click", function () {
            myDropzoneDocument.removeAllFiles(true);
            $("#placeholderUpload").hide();
        });
        function tableNpePebHistory() {
            $tableNpePebHistory = $('#tableNpePebHistory');
            var columnNpePebHistory = [
                {
                    field: 'FieldName',
                    title: 'FieldName',
                    halign: 'center',
                    align: 'left',
                    class: 'text-nowrap',
                    sortable: true
                },
                {
                    field: 'BeforeValue',
                    title: 'Old Value',
                    halign: 'center',
                    align: 'left',
                    class: 'text-nowrap',
                    sortable: true
                },
                {
                    field: 'AfterValue',
                    title: 'New Value',
                    halign: 'center',
                    align: 'left',
                    class: 'text-nowrap',
                    sortable: true
                },
                {
                    field: 'CreateBy',
                    title: 'Change by',
                    halign: 'center',
                    align: 'left',
                    class: 'text-nowrap',
                    sortable: true
                },
                {
                    field: 'CreateDate',
                    title: 'Date of modification',
                    halign: 'center',
                    align: 'left',
                    class: 'text-nowrap',
                    sortable: true,
                    formatter: function (data, row, index) {
                        return moment(data).format("DD MMM YYYY hh:mm:ss");
                    }
                },
            ];

            $tableNpePebHistory.bootstrapTable({
                url: "/EMCS/GetListSpRequestForChangeByFormType",
                columns: columnNpePebHistory,
                pagination: true,
                pagesize: '10',
                cache: false,
                search: false,
                striped: false,
                clickToSelect: true,
                reorderableColumns: true,
                toolbarAlign: 'left',
                queryParams: function (params) {

                    return {
                        limit: params.limit,
                        offset: params.offset,
                        IdTerm: $("#CargoID").val(),
                        formType: 'NpePeb',
                        sort: params.sort,
                        order: params.order
                    };
                },
                onClickRow: selectRow,
                showColumns: false,
                showRefresh: false,
                smartDisplay: false,
                formatNoMatches: function () {
                    return '<span class="noMatches">Not Data Found</span>';
                },
                responseHandler: function (resp) {

                    var data = {};
                    $.map(resp, function (value, key) {
                        data[value.Key] = value.Value;
                    });
                    return data.rows;
                }
            });
            /*$($tableGRHistory).bootstrapTable('refresh')*/
        }
    </script>
}