
@model  App.Web.Models.EMCS.KppbcModel
@{
    var mode = ViewBag.crudMode;
    var title = mode == "I" ? "Add" : (mode == "U" ? "Update" : "Delete");
    var statusList = new List<string>();
}

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
    <h4 class="modal-title" id="myModalLabel"><i class="fa @((mode == "I") ? "fa-plus-circle" : "fa-edit")"></i>&nbsp;@title Kppbc</h4>
</div>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="modal-body">
        <div class="row">
            <div class="col-lg-12">
                <div class="form-group">
                    <label class="control-label col-md-3 col-xs-12">Area</label>
                    <div class="input-group col-md-9 col-xs-12">
                        @Html.DropDownListFor(m => m.Kppbc.AreaId, new SelectList(Model.AreaList, "ID", "BAreaName"), new { @class = "js-states form-control" })
                        <div>@Html.ValidationMessageFor(m => m.Kppbc.AreaId)</div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-3 col-xs-12">Code</label>
                    <div class="input-group col-md-9 col-xs-12">
                        @Html.TextBoxFor(m => m.Kppbc.Code, new { @class = "form-control required", placeholder = "Code" })
                        <div>@Html.ValidationMessageFor(m => m.Kppbc.Code)</div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-3 col-xs-12">Name</label>
                    <div class="input-group col-md-9 col-xs-12">
                        @Html.TextBoxFor(m => m.Kppbc.Name, new { @class = "form-control required", placeholder = "Name" })
                        <div>@Html.ValidationMessageFor(m => m.Kppbc.Name)</div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-3 col-xs-12">Province</label>
                    <div class="input-group col-md-9 col-xs-12">
                        @Html.TextBoxFor(m => m.Kppbc.Propinsi, new { @class = "js-states form-control", placeholder = "Province" })
                        <div>@Html.ValidationMessageFor(m => m.Kppbc.Propinsi)</div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-3 col-xs-12">Districts</label>
                    <div class="input-group col-md-9 col-xs-12">
                        @Html.TextBoxFor(m => m.Kppbc.Address, new { @class = "js-states form-control", placeholder = "Districts" })
                        <div>@Html.ValidationMessageFor(m => m.Kppbc.Address)</div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal-footer">
        <span id="progress" class="text-center" style="display: none;">
            <img src="@Url.Content("~/Content/images/wait.gif")" alt="wait" />
            Wait..
        </span>
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        @if (mode == "I")
        {
            <button type="submit" class="btn btn-success"><i class="fa fa-save"></i> Save</button>
        }
        else if (mode == "U")
        {
            <button type="submit" class="btn btn-success"><i class="fa fa-save"></i> Update</button>
        }
        else
        {
            <button type="submit" class="btn btn-danger"><i class="fa fa-save"></i> Delete</button>
        }

    </div>

    @Html.HiddenFor(a => a.Kppbc.Id)
    @*@Html.HiddenFor(a => a.Menu.EntryBy)
        @Html.HiddenFor(a => a.Menu.ModifiedBy)
        @Html.HiddenFor(a => a.Menu.EntryDate)
        @Html.HiddenFor(a => a.Menu.ModifiedDate)*@
    @*@Html.HiddenFor(a => a.Menu.IsActive)
        @Html.HiddenFor(a => a.Menu.IsDefault)*@


}

<script>
    var mode = '@mode';
    if (mode != 'I')
        $("#ID").attr('readonly', 'readonly');

    $(document).ready(function () {
        $("form").removeData("validator");
        $("form").removeData("unobtrusiveValidation");
        $.validator.unobtrusive.parse("form");
    });
</script>




