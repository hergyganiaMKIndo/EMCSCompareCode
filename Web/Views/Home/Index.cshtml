@using System.Xml.Linq;
@{
    ViewBag.Title = "Home Page";
    string actual = "";

    //try
    //{
    //    Uri myReferrer = Request.UrlReferrer;
    //    actual = "UrlReferrer: " + myReferrer.ToString();
    //}
    //catch { }

    try
    {
        if(!string.IsNullOrEmpty(actual))
        {
            actual = actual + "<hr>";

            var cookieUser = Request.Cookies.Get("sp");
            var fedAuth = Request.Cookies.Get("FedAuth");

            string errMessage = string.Empty;
            string hostWeb = "http://portalstg2.trakindo.co.id";

            //var fedAuthCookie = new Cookie()
            //{
            //	Expires = fedAuth.Expires,
            //	Name = fedAuth.Name,
            //	Path = fedAuth.Path,
            //	Secure = fedAuth.Secure,
            //	Value = fedAuth.Value.Replace(' ', '+')
            //};

            //var cookies = new List<Cookie>();
            //cookies.Add(fedAuthCookie);

            string requestUrl = hostWeb + "/_api/Web/CurrentUser?$select=Id,LoginName,Title,Email";
            var httpReq = (HttpWebRequest)WebRequest.Create(requestUrl);
            // add access token string as Authorization header
            httpReq.Accept = @"application/atom+xml";

            string domainCookie = string.Empty;
            if(string.IsNullOrEmpty(System.Web.Configuration.WebConfigurationManager.AppSettings["DomainForCookie"]))
            {
                domainCookie = httpReq.RequestUri.Host;
            }
            else
            {
                domainCookie = System.Web.Configuration.WebConfigurationManager.AppSettings["DomainForCookie"];
            }

            //httpReq.CookieContainer = new CookieContainer();
            //foreach(var cookie in cookies)
            //{
            //    cookie.Domain = domainCookie;
            //    httpReq.CookieContainer.Add(cookie);
            //}

            // execute REST API call and inspect response
            HttpWebResponse responseForUser = (HttpWebResponse)httpReq.GetResponse();
            StreamReader readerUser = new StreamReader(responseForUser.GetResponseStream());
            var xdoc = XDocument.Load(readerUser);
            readerUser.Close();
            readerUser.Dispose();

            //Read properties
            XNamespace ns = "http://www.w3.org/2005/Atom";
            XNamespace d = "http://schemas.microsoft.com/ado/2007/08/dataservices";
            XNamespace m = "http://schemas.microsoft.com/ado/2007/08/dataservices/metadata";

            var userLogName = xdoc.Descendants(m + "properties").FirstOrDefault().Element(d + "LoginName").Value;
            var userId = xdoc.Descendants(m + "properties").FirstOrDefault().Element(d + "Id").Value;
            var accountId = userLogName.Split('|').Last();// + "|" + userId;
                                                          //string accountId = App.Web.Helper.GetAccountAndId(hostWeb, @"application/atom+xml", cookies);

            actual = actual + " accountId:" + accountId;
            //App.Web.Models.SharePointUser spUser = App.Web.Helper.SharepointHelper.GetSpUser(hostWeb, fedAuth, cookieUser, ref errMessage);
            //actual = actual + "GetSpUser: " + errMessage + " spUser:" + spUser.Id + " Name:" + spUser.Name;
            actual = actual + "<hr>";
        }
    }
    catch { }
}
<div class="box box-warning">
	<div class="box-header">
		<h3 class="box-title"><b></b></h3>
	</div>

	@*@if(!string.IsNullOrEmpty(actual))
	{
		@Html.Raw(actual);
	}*@

	<script>
	</script>
</div>