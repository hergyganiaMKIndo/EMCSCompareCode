@model  App.Data.Domain.Survey
@{
	var mode = Convert.ToString(ViewBag.crudMode + "");
	var formMode = Convert.ToString(ViewBag.formMode + "").ToLower(); // "Verify";

	string _url = "/vetting-process/SurveyAdd";
	if(mode == "U")
	{
		_url = "/vetting-process/SurveyEdit";
	}
	string folderdoc = (System.Configuration.ConfigurationManager.AppSettings["ImagesData.document"] + "/").Replace("~/", "/");
}
<form method="post" action="@_url" id="frmSurvey" onsubmit="return frmSurveySubmit(this)">

	<div class="col-lg-12">
		<div class="col-lg-6">
			<div class="form-group">
				<label class="control-label col-lg-4 col-xs-4">
					@*<input type="checkbox" id="chkVrNo" class="surveyChk"/>*@ VR No #
				</label>
				<div class="input-group col-lg-8 col-xs-8">
					@Html.TextBoxFor(m => m.VRNo, new { @class = "form-control" })
				</div>
			</div>
			<div class="form-group">
				<label class="control-label col-lg-4 col-xs-4"><input type="checkbox" id="chkVrDate" class="surveyChk" />&nbsp;VR Submission Date</label>
				<div class="input-group col-lg-8 col-xs-8">
					@Html.TextBoxFor(m => m.VRDate, Model.VRDate.ToString("dd MMM yyyy"), new { @class = "form-control pull-left date required", placeholder = "" })
					<div class="input-group-addon cal">
						<i class="fa fa-calendar"></i>
					</div>
					<div>@Html.ValidationMessageFor(m => m.VRDate)</div>
				</div>
			</div>

			<div class="form-group">
				<label class="control-label col-lg-4 col-xs-4"><input type="checkbox" id="chkCommodity" class="surveyChk" />&nbsp;Commodity</label>
				<div class="input-group col-lg-8 col-xs-8">
					@Html.SelectCommodity("", "select commodity", new { @class = "form-control required", name = "CommodityID" })
					<div>@Html.ValidationMessageFor(m => m.CommodityID)</div>
				</div>
			</div>

			@if(("verify-rfi-els").Contains(formMode)) // == "verify" || formMode == "rfi" || formMode == "els")
			{
				<div class="form-group">
					<label class="control-label col-lg-4 col-xs-4"><input type="checkbox" id="chkVoNo" class="surveyChkVo" />&nbsp;VO #</label>
					<div class="input-group col-lg-8 col-xs-8">
						@Html.TextBoxFor(m => m.VONo, new { @class = "form-control required" })
						<div>@Html.ValidationMessageFor(m => m.VONo)</div>
					</div>
				</div>
			}
		</div>

		<div class="col-lg-6">
			@if(("rfi-els").Contains(formMode)) //(formMode == "rfi")
			{
				<div class="form-group">
					<label class="control-label col-lg-4 col-xs-4">RFI Date</label>
					<div class="input-group col-lg-8 col-xs-8">
						@Html.TextBoxFor(m => m.RFIDate, (Model.RFIDate.HasValue ? Model.RFIDate.Value.ToString("dd MMM yyyy") : ""), new { @class = "form-control pull-left date required", placeholder = "" })
						@Html.ValidationMessageFor(m => m.RFIDate)
						<div class="input-group-addon">
							<i class="fa fa-calendar"></i>
						</div>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label col-lg-4 col-xs-4">Survey Date</label>
					<div class="input-group col-lg-8 col-xs-8">
						@Html.TextBoxFor(m => m.SurveyDate, (Model.SurveyDate.HasValue ? Model.SurveyDate.Value.ToString("dd MMM yyyy") : ""), new { @class = "form-control pull-left date required", placeholder = "" })
						@Html.ValidationMessageFor(m => m.SurveyDate)
						<div class="input-group-addon">
							<i class="fa fa-calendar"></i>
						</div>
					</div>
				</div>

				<div class="form-group" id="divConfirmDone">
					<label class="control-label col-lg-4 col-xs-4">Survey Done :</label>
					<div class="input-group col-lg-8 col-xs-8">
						<button id="confirmDone" type="button" class="btn btn-warning">Confirm</button>
					</div>
				</div>

				<div class="form-group" id="idSurveyDone" style="display:none">
					<label class="control-label col-lg-4 col-xs-4">Done Date</label>
					<div class="input-group col-lg-8 col-xs-8">
						<label class="form-control" name="SurveyDoneTxt" readonly="readonly">@(Model.SurveyDone.HasValue ? Model.SurveyDone.Value.ToString("dd MMM yyyy") : "")</label>
					</div>
				</div>
			}
			@if(!string.IsNullOrEmpty(Model.Email))
			{
				<div class="form-group">
					<label class="control-label col-lg-4 col-xs-4">Email List</label>
					<div class="input-group col-lg-8 col-xs-8">
						@Html.TextAreaFor(m => m.Email, 3, 2222, new { @class = "form-control required" }) @*@type = "email",*@
						<div>@Html.ValidationMessageFor(m => m.Email)</div>
					</div>
				</div>
			}

            <div class="form-group">
                <label class="control-label col-lg-4 col-xs-4">Manufacturing Code</label>
                <div class="input-group col-lg-8 col-xs-8">
                    @Html.TextBoxFor(m => m.ManufacturingCode, new { @class = "form-control required" }) @*@type = "email",*@
                    <div>@Html.ValidationMessageFor(m => m.ManufacturingCode)</div>
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-lg-4 col-xs-4">Survey Location</label>
                <div class="input-group col-lg-8 col-xs-8">
                    @Html.SelectSurvryLocation("", "select survey location", new { @class = "form-control required", name = "SurveyLocationId" })
                    <div>@Html.ValidationMessageFor(m => m.SurveyLocationId)</div>
                </div>
            </div>

		</div>
	</div>

	@if(formMode == "els")
	{
		<div class="col-lg-12">
			<div class="col-lg-6">
				<div class="form-group">
					<label class="control-label col-lg-4 col-xs-4">e-LS #</label>
					<div class="input-group col-lg-8 col-xs-8">
						@Html.TextBoxFor(m => m.eLS, new { @class = "form-control required" })
						<div>@Html.ValidationMessageFor(m => m.eLS)</div>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label col-lg-4 col-xs-4">Payment InvoiceNo</label>
					<div class="input-group col-lg-8 col-xs-8">
						@Html.TextBoxFor(m => m.PaymentInvoiceNo, new { @class = "form-control required" })
						<div>@Html.ValidationMessageFor(m => m.PaymentInvoiceNo)</div>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label col-lg-4 col-xs-4">Remark</label>
					<div class="input-group col-lg-8 col-xs-8">
						@Html.TextAreaFor(m => m.Remark, 2, 2222, new { @class = "form-control" })
					</div>
				</div>

			</div>

			<div class="col-lg-6">
				<div class="form-group">
					<label class="control-label col-lg-4 col-xs-4">FDSubmit Date</label>
					<div class="input-group col-lg-8 col-xs-8">
						@Html.TextBoxFor(m => m.FDSubmit, (Model.FDSubmit.HasValue ? Model.FDSubmit.Value.ToString("dd MMM yyyy") : ""), new { @class = "form-control pull-left date required", placeholder = "" })
						@Html.ValidationMessageFor(m => m.FDSubmit)
						<div class="input-group-addon">
							<i class="fa fa-calendar"></i>
						</div>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label col-lg-4 col-xs-4">Payment Date</label>
					<div class="input-group col-lg-8 col-xs-8">
						@Html.TextBoxFor(m => m.PaymentDate, (Model.PaymentDate.HasValue ? Model.PaymentDate.Value.ToString("dd MMM yyyy") : ""), new { @class = "form-control pull-left date required", placeholder = "" })
						@Html.ValidationMessageFor(m => m.PaymentDate)
						<div class="input-group-addon">
							<i class="fa fa-calendar"></i>
						</div>
					</div>
				</div>
			</div>

		</div>
	}
	else
	{
		<input type="hidden" name="eLS" value="@Model.eLS" />
		<input type="hidden" name="eLS" value="@Model.FDSubmit" />
		<input type="hidden" name="eLS" value="@Model.PaymentDate" />
		<input type="hidden" name="eLS" value="@Model.PaymentInvoiceNo" />
		<input type="hidden" name="eLS" value="@Model.Remark" />
	}


	<div class="col-lg-12">
		<hr>
		<div class="col-lg-6" style="margin-left:-12px">
			@if(mode != "I")
			{
				@*<label>Batch No# @Model.SurveyID</label>*@
				<div class="form-group">
					<label class="control-label col-lg-4 col-xs-4">Batch No</label>
					<div class="input-group col-lg-8 col-xs-8">
						# <span style="font-weight:bold">@Model.SurveyID</span>
					</div>
				</div>
			}
			else
			{
				<input type="hidden" id="SurveyID" name="SurveyID" value="@Model.SurveyID" />
			}
		</div>
		<div class="col-lg-6">
			<div style="float:right; margin-right:0px">
				<button id="btnSubmit" type="submit" class="btn btn-success" style="width:125px;">@(mode == "I" ? "Save" : "Update") </button>
				<button type="button" class="btn btn-danger" style="width:125px;" onclick="cancelSurvey()">Cancel</button>
			</div>
		</div>		
	</div>


	<input type="hidden" name="Freight" value="@Model.Freight" />
	<input type="hidden" name="Status" value="@Model.Status" />
	<input type="hidden" name="EntryBy" value="@Model.EntryBy" />
	<input type="hidden" name="ModifiedBy" value="@Model.ModifiedBy" />
	<input type="hidden" name="EntryDate" value="@Model.EntryDate" />
	<input type="hidden" name="ModifiedDate" value="@Model.ModifiedDate" />
	<input type="hidden" name="SurveyDone" value="@Model.SurveyDone" />
	<input type="hidden" name="SurveyID" value="@Model.SurveyID" />
	<input type="hidden" id="VettingRoute" name="VettingRoute" value="@Model.VettingRoute" />
</form>

<div class="col-lg-12">
	<hr>
</div>

<div class="nav-tabs-custom">
	<ul class="nav nav-tabs nav-justified">
		<li class="active"><a href="#tab_parts_survey" data-toggle="tab">Parts</a></li>
		<li><a href="#tab_attachment_survey" data-toggle="tab">Attachment</a></li>
	</ul>

	<div class="tab-content" style="height:310px">

		<div class="tab-pane active" id="tab_parts_survey">
			<div class="toolbarSurvey">
				<button id="btnAddPart" type="button" class="btn btn-warning" data-toggle="modal" data-target="#modalPartOrderList" style="width:150px;">
					<i class="fa fa-cog"></i> Add Parts
				</button>
				<button type="button" class="btn btn-info downloadExcel" style="width:150px;">
					<i class="fa fa-download"></i> Download to Excel
				</button>
			</div>

			<table class="table table-bordered table2excel" id="tableSurveyPart" style="width:100%" data-detail-formatter="detailFormatter"></table>

		</div>

		<div class="tab-pane" id="tab_attachment_survey">
			<div class="toolbarAttachment">
				<button id="btnAddDocument" type="button" class="btn btn-warning" onclick="loadModal('/vetting-process/surveyAttachmentAdd')" style="width:150px;">
					<i class="fa fa-files-o"></i> Add Attachment
				</button>
			</div>
			<table class="table table-bordered" id="tableAttachment" style="width:100%" data-detail-formatter="detailFormatter"></table>
		</div>
	</div>
</div>

<form id="xls" role="form" action="/vetting-process/SurveyXcel">
	<input type="hidden" name="SurveyID" value="@Model.SurveyID" />
	<input type="hidden" name="CommodityID" value="@Model.CommodityID" />
	<input type="hidden" name="VRNo" value="@Model.VRNo" />
	<input type="hidden" name="VRDate" value="@Model.VRDate" />
</form>

@Html.Partial("PartsOrder.listCheck.hs")

<script>
	var folderdoc = '@folderdoc';
	var formMode = '@formMode';
	var vettingRoute = "@Model.VettingRoute";

	$(function () {
		$('.surveyChk, .surveyChkVo').hide();

		if (formMode == 'verify' || formMode == 'rfi' || formMode == 'els') {
			//$("[name=VRNo]").attr('disabled', 'true');
			$("[name=VRDate]").attr('disabled', 'true');
			$("[name=CommodityID]").attr('disabled', 'true');
			$('.surveyChk').show();
		}
		if (formMode == 'rfi' || formMode == 'els') {
			$("[name=VONo]").attr('disabled', 'true');
			$('.surveyChkVo').show();
		};

		//$('#chkVrNo').click(function () {
		//	if ($(this).is(":checked"))
		//		$("[name=VRNo]").removeAttr('disabled');
		//	else
		//		$("[name=VRNo]").attr('disabled', 'true');
		//});

		$('#chkVrDate').click(function () {
			if ($(this).is(":checked"))
				$("[name=VRDate]").removeAttr('disabled');
			else
				$("[name=VRDate]").attr('disabled', 'true');
		});
		$('#chkCommodity').click(function () {
			if ($(this).is(":checked"))
				$("[name=CommodityID]").removeAttr('disabled');
			else
				$("[name=CommodityID]").attr('disabled', 'true');
		});
		$('#chkVoNo').click(function () {
			if ($(this).is(":checked"))
				$("[name=VONo]").removeAttr('disabled');
			else
				$("[name=VONo]").attr('disabled', 'true');
		});

		if ($("[name=SurveyDone]").val() != null && $("[name=SurveyDone]").val() != '') {
			$("#idSurveyDone").show();
			$("#divConfirmDone").hide();
			$("#btnSubmit").hide();
			$("#btnAddPart").hide();
			$("#btnAddDocument").hide();
		};

		if (formMode == 'els') {
			$("[name=RFIDate]").attr('disabled', 'true');
			$("[name=SurveyDate]").attr('disabled', 'true');
			$("#btnSubmit").show();
		};

		$("#confirmDone").click(function () {

			if ($("[name=RFIDate]").val() == '' || $("[name=SurveyDate]").val() == '' || $("[name=Email]").val() == '') {
				sAlert('Warning', 'RFI Date,Survey Date,Email must be fill in', 'success');
				return;
			};

			swal({
				title: "Are you sure ?",
				type: "warning",
				showCancelButton: true,
				confirmButtonColor: "#F56954",
				confirmButtonText: "Yes",
				cancelButtonText: "No",
				closeOnConfirm: false,
				closeOnCancel: true
			},
				function (isConfirm) {
					if (isConfirm) {
						sweetAlert.close();
						$("#idSurveyDone").show();
						$("[name=SurveyDoneTxt]").text('@DateTime.Today.ToString("dd MMM yyyy")');
						$("[name=SurveyDone]").val('@DateTime.Today');
					}
				});
		});


		$("form").removeData("validator");
		$("form").removeData("unobtrusiveValidation");
		$.validator.unobtrusive.parse("form");

		$.validator.addMethod("greaterThan",
			function (value, element, params) {
				var prm = $('#' + params).val();
				if (!/Invalid|NaN/.test(new Date(value))) {
					return new Date(value) >= new Date(prm);
				}
				return isNaN(value) && isNaN(prm) || (Number(value) > Number(prm));
			}, 'Must be greater than {0}.');

		if ($('#RFIDate').length) {
			$("#RFIDate").rules('add', { greaterThan: "VRDate" });
			$("#SurveyDate").rules('add', { greaterThan: "RFIDate" });
		}

	});

	function frmSurveySubmit(frm) {
		if (!$("form#" + frm.id).valid()) { return; }
		$('#progress').show();
		enableLink(false);


		$("[name=VONo]").removeAttr('disabled');
		$("[name=VRNo]").removeAttr('disabled');
		$("[name=VRDate]").removeAttr('disabled');
		$("[name=CommodityID]").removeAttr('disabled');
		$("[name=RFIDate]").removeAttr('disabled');
		$("[name=SurveyDate]").removeAttr('disabled');
		//$('[disabled="false"]​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​')​.removeAttr('disabled');

		$.ajax({
			url: frm.action,
			type: frm.method,
			data: $(frm).serialize(),
			success: function (result) {

				enableLink(true);

				if (result.Status == 0) {
					$('#progress').hide();
					if (result.Msg != undefined) sAlert('Success', result.Msg + ' ;Batch No: ' + result.result, 'success');
					cancelSurvey();

					//$('#BLAWB').val(result.result);
					//refreshSurvey();
				}
				else {
					if (result.Msg != undefined) sAlert('Failed', result.Msg, 'error');
					$('#progress').hide();
				}
			}
		});
		return false;
	}

	function cancelSurvey() {
		$('.nav-tabs a[href=#freight-survei]').tab('show').trigger('click');
	}

</script>
<script src="@Url.Content("~/scripts/script.js")"></script>
<script src="@Url.Content("~/Scripts/jquery.table2excel.js")"></script>
<script src="@Url.Content("~/scripts.app/vetting/survey.iud.cshtml.js")"></script>
