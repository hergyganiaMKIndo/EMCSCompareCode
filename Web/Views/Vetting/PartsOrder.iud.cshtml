@model  App.Data.Domain.PartsOrder
@{
    var mode = ViewBag.crudMode;
    var title = mode == "I" ? "Add" : (mode == "U" ? "Update" : "Delete");
}

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
    <h4 class="modal-title"><i class="fa fa-list"></i> @title Invoice / SX Detail</h4>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="modal-body" style="min-height:475px">
        <div class="row">
            <div class="col-lg-12">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-md-3 col-xs-12">Invoice No</label>
                        <div class="input-group col-md-9 col-xs-12">
                            @Html.TextBoxFor(m => m.InvoiceNo, new { @class = "form-control required", @readonly = "readonly" })
                            @*<div>@Html.ValidationMessageFor(m => m.InvoiceNo)</div>*@
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-3 col-xs-12">Invoice Date</label>
                        <div class="input-group col-lg-9 col-xs-12">
                            <input name="InvoiceDate" type="text" class="form-control" value="@Model.InvoiceDate.ToString("dd MMM yyyy")" readonly="readonly" />
                        </div>
                    </div>
                    @*<div class="form-group">
                            <label class="control-label col-md-3 col-xs-12">Cust CD</label>
                            <div class="input-group col-md-9 col-xs-12">
                                <input name="JCode" type="text" class="form-control" value="@Model.JCode" readonly="readonly" />
                            </div>
                        </div>*@
                    <div class="form-group">
                        <label class="control-label col-md-3 col-xs-12">Store Number</label>
                        <div class="input-group col-md-9 col-xs-12">
                            <input name="StoreNumber" type="text" class="form-control" value="@Model.StoreNumber" re readonly="readonly" />
                        </div>
                    </div>

                    @*<div class="form-group">
                            <label class="control-label col-md-3 col-xs-12">Total Amount</label>
                            <div class="input-group col-md-9 col-xs-12">
                                <input name="TotalAmount" type="text" class="form-control" value="@(Model.TotalAmount.HasValue ? Model.TotalAmount.Value.ToString("#,##.##") : "")" readonly="readonly" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-3 col-xs-12">Total FOB</label>
                            <div class="input-group col-md-9 col-xs-12">
                                <input name="TotalFOB" type="text" class="form-control" value="@(Model.TotalFOB.HasValue ? Model.TotalFOB.Value.ToString("#,##.##") : "")" readonly="readonly" />
                            </div>
                        </div>*@

                </div>
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-md-3 col-xs-12">Ship Instruction</label>
                        <div class="input-group col-md-9 col-xs-12">
                            <input type="text" class="form-control" value="@Model.ShippingInstruction" readonly="readonly" />
                        </div>
                    </div>

                    @*<div class="form-group">
                            <label class="control-label col-md-3 col-xs-12">Service Charge</label>
                            <div class="input-group col-md-9 col-xs-12">
                                <input name="ServiceCharges" type="text" class="form-control" value="@(Model.ServiceCharges.HasValue ? Model.ServiceCharges.Value.ToString("#,##.##") : "")" readonly="readonly" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-3 col-xs-12">Core Deposit</label>
                            <div class="input-group col-md-9 col-xs-12">
                                <input name="CoreDeposit" type="text" class="form-control" value="@(Model.CoreDeposit.HasValue ? Model.CoreDeposit.Value.ToString("#,##.##") : "")" readonly="readonly" />
                            </div>
                        </div>*@
                    @*<div class="form-group">
                            <label class="control-label col-md-3 col-xs-12">Other Charges</label>
                            <div class="input-group col-md-9 col-xs-12">
                                <input name="OtherCharges" type="text" class="form-control" value="@(Model.OtherCharges.HasValue ? Model.OtherCharges.Value.ToString("#,##.##") : "")" readonly="readonly" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-3 col-xs-12">Freight Charges</label>
                            <div class="input-group col-md-9 col-xs-12">
                                <input name="FreightCharges" type="text" class="form-control" value="@(Model.FreightCharges.HasValue ? Model.FreightCharges.Value.ToString("#,##.##") : "")" readonly="readonly" />
                            </div>
                        </div>*@
                    @*<div class="form-group">
                            <label class="control-label col-md-3 col-xs-12">Ship ID ASN</label>
                            <div class="input-group col-md-9 col-xs-12">
                                <input name="ShippingIDASN" type="text" class="form-control" value="@Model.ShippingIDASN" readonly="readonly" />
                            </div>
                        </div>*@
                    <div class="form-group">
                        <label class="control-label col-md-3 col-xs-12">Agreement Type </label>
                        <div class="input-group col-md-9 col-xs-12">
                            <input name="AgreementType" type="text" class="form-control" value="@Model.AgreementType" readonly="readonly" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-3 col-xs-12">DA Number</label>
                        <div class="input-group col-md-9 col-xs-12">
                            <p id="daNumber">@Model.DA</p>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-12" style="margin-top:10px">
                <div class="nav-tabs-custom">
                    <ul class="nav nav-tabs nav-justified">
                        <li class="active"><a href="#tab_1" data-toggle="tab">Detail Parts Order</a></li>
                        <li><a href="#tab_2" data-toggle="tab">Case Info</a></li>
                        <li class="tab-email" style="display:none"><a href="#tab_3" data-toggle="tab">Email List</a></li>
                        <li><a href="#tab_sx" data-toggle="tab">.. More SX Info ..</a></li>
                        <li><a href="#shipmentStatus" data-toggle="tab">Shipment Status</a></li>
                    </ul>
                    <div class="tab-content" style="max-height:444px; overflow-y:auto">
                        <div class="tab-pane active" id="tab_1">
                            <table id="tblDet" class="table table-bordered"></table>
                        </div>
                        <div class="tab-pane" id="tab_2">
                            <table id="tblCase" class="table table-bordered"></table>
                        </div>
                        <div class="tab-pane" id="tab_3">
                            @Html.TextAreaFor(m => m.Email, 3, 2222, new { id = "emailList", @class = "form-control" })
                        </div>

                        <div class="tab-pane" id="tab_sx">
                            <div class="col-lg-12" style="max-height:222px; overflow-y:auto">

                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label class="control-label col-md-3 col-xs-12">Cust CD</label>
                                        <div class="input-group col-md-9 col-xs-12">
                                            <input name="JCode" type="text" class="form-control" value="@Model.JCode" readonly="readonly" />
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-md-3 col-xs-12">Ship ID ASN</label>
                                        <div class="input-group col-md-9 col-xs-12">
                                            <input name="ShippingIDASN" type="text" class="form-control" value="@Model.ShippingIDASN" readonly="readonly" />
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-md-3 col-xs-12">Total Amount</label>
                                        <div class="input-group col-md-9 col-xs-12">
                                            <input name="TotalAmount" type="text" class="form-control" value="@(Model.TotalAmount.HasValue ? Model.TotalAmount.Value.ToString("#,##.##") : "")" readonly="readonly" />
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-md-3 col-xs-12">Total FOB</label>
                                        <div class="input-group col-md-9 col-xs-12">
                                            <input type="text" class="form-control" value="@(Model.TotalFOB.HasValue ? Model.TotalFOB.Value.ToString("#,##.##") : "")" readonly="readonly" />
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-md-3 col-xs-12">Hazardous</label>
                                        <div class="input-group col-md-9 col-xs-12">
                                            <input type="text" class="form-control" value="@(Model.IsHazardous ? "Yes" : "No")" readonly="readonly" />
                                        </div>
                                    </div>
                                </div>

                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label class="control-label col-md-3 col-xs-12">Service Charge</label>
                                        <div class="input-group col-md-9 col-xs-12">
                                            <input name="ServiceCharges" type="text" class="form-control" value="@(Model.ServiceCharges.HasValue ? Model.ServiceCharges.Value.ToString("#,##.##") : "")" readonly="readonly" />
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-md-3 col-xs-12">Core Deposit</label>
                                        <div class="input-group col-md-9 col-xs-12">
                                            <input name="CoreDeposit" type="text" class="form-control" value="@(Model.CoreDeposit.HasValue ? Model.CoreDeposit.Value.ToString("#,##.##") : "")" readonly="readonly" />
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <label class="control-label col-md-3 col-xs-12">Other Charges</label>
                                        <div class="input-group col-md-9 col-xs-12">
                                            <input name="OtherCharges" type="text" class="form-control" value="@(Model.OtherCharges.HasValue ? Model.OtherCharges.Value.ToString("#,##.##") : "")" readonly="readonly" />
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-md-3 col-xs-12">Freight Charges</label>
                                        <div class="input-group col-md-9 col-xs-12">
                                            <input name="FreightCharges" type="text" class="form-control" value="@(Model.FreightCharges.HasValue ? Model.FreightCharges.Value.ToString("#,##.##") : "")" readonly="readonly" />
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-md-3 col-xs-12">Last Update</label>
                                        <div class="input-group col-md-9 col-xs-12">
                                            <input type="text" class="form-control" value="@Model.ModifiedDate.ToString("dd MMMM yyyy")" readonly="readonly" />
                                        </div>
                                    </div>

                                </div>

                            </div>

                        </div>


                        <div class="tab-pane" id="shipmentStatus">
                            <table id="tblShipmentStatus" class="table table-bordered"></table>
                        </div>

                    </div>
                </div>
            </div>

        </div>
    </div>

    <div class="modal-footer">
        <span id="progress" class="text-center" style="display: none;">
            <img src="@Url.Content("~/Content/images/wait.gif")" alt="wait" />
            Wait..
        </span>
        <button id="btnClose" type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        &nbsp;
        <button id="btnReturn" type="button" class="btn btn-danger" style="display:none">Return All To Vendor</button>
    </div>

    <input type="hidden" name="ModifiedBy" value="@Model.ModifiedBy" />
    <input type="hidden" name="ModifiedDate" value="@Model.ModifiedDate" />
    <input type="hidden" name="EntryDate" value="@Model.EntryDate" />
    <input type="hidden" name="EntryBy" value="@Model.EntryBy" />
    <input type="hidden" name="ShippingInstructionID" value="@Model.ShippingInstructionID" />
    <input type="hidden" name="Status" value="@Model.Status" />
    <input type="hidden" name="IsHazardous" value="@Model.IsHazardous" />
    <input type="hidden" name="VettingRoute" value="@Model.VettingRoute" />
    <input type="hidden" id="PartsOrderID" name="PartsOrderID" value="@Model.PartsOrderID" />
}

<div id="modalOM" class="modal" data-focus-on="input:first" style="margin-top:11%;top:11%;">
    <div class="modal-dialog">
        <div class="modal-content">
            <h3 class="modal-title col-sm-12" style="margin-bottom: 10px;"><i class="fa fa-list"></i> Update Order Method <span id="titleModal"></span></h3>

            <form class="form-horizontal" method="post" action="/vetting-process/partsOrderOmEdit" id="frmModalOM" onsubmit="return frmModalOMSubmit(this)">
                <div class="modal-body" style="min-height:160px;">
                    <div class="form-group">
                        <label class="control-label col-sm-4" for="PartsNumber">Parts Number</label>
                        <div class="col-sm-5">
                            <input type="text" class="form-control" name="PartsNumber" id="PartsNumber" readonly="readonly">
                        </div>
                        <div class="col-sm-3"></div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-sm-4" for="CaseNo">Case No</label>
                        <div class="col-sm-5">
                            <input type="text" class="form-control" name="CaseNo" id="CaseNo" readonly="readonly">
                        </div>
                        <div class="col-sm-3"></div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-sm-4" for="OMID">OM</label>
                        <div class="col-sm-5">
                            <select class="js-states form-control required" id="OMID" name="OMID" style="width: 95%;" data-val-required="OM is required.">
                                <option value="">-</option>
                            </select>
                            <div><span data-valmsg-replace="true" data-valmsg-for="OMID" class="field-validation-valid"></span></div>
                        </div>
                        <div class="col-sm-3"></div>
                    </div>

                    <div class="form-group">
                        <div class="divReturntToVendor col-sm-12" style="display:none; margin-left:-3px">
                            <label class="control-label col-sm-4" style=" margin-left:-10px">Return To Vendor?</label>
                            <div class="col-sm-5" style="margin-left:9px">
                                <div class="switch-toggle switch-2 well" style="margin-bottom:0px;">
                                    <input id="return-n" name="ReturnToVendor" type="radio" value="" />
                                    <label for="return-n" onclick="">No</label>
                                    <input id="return-y" name="ReturnToVendor" type="radio" value="1" />
                                    <label for="return-y" onclick="1">Yes</label>
                                    <a class="btn btn-primary"></a>
                                </div>
                            </div>
                            <div class="col-sm-3"></div>
                            @*<div class="col-sm-12"></div>*@
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="divReturntToVendor col-sm-12" style="display:none; margin-left:-3px">
                            <label class="control-label col-sm-4" style="margin-left:-10px">Remark</label>
                            <div class="col-sm-5" style="margin-left:9px">
                                <textarea class="form-control" name="Remark" id="Remark" rows="2"></textarea>
                            </div>
                            <div class="col-sm-3 "></div>
                        </div>
                    </div>

                    <div class="col-sm-12"></div>
                    <input type="hidden" name="DetailID" id="DetailID">
                    <input type="hidden" name="Email" id="omEmail">
                    <input type="hidden" name="ReturnToVendor1" id="ReturnToVendor1">
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-default closeOm">Close</button>
                    <input class="btn btn-success" type="submit" id="save_edit_info" name="submit" value="Update" />
                </div>

            </form>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        if (typeof window.rebindCSS == "undefined")
            $.getScript("/scripts/script.js");
        else
            rebindCSS();

        var $tblCase = $('#tblCase'), $tblDet = $('#tblDet'), $tblShipmentStatus = $('#tblShipmentStatus');
        enableLink(false);

        $('.closeOm').click(function () {
            $('#modalOM').modal('toggle');
            showMainScrollbar(false);
        });

        //$('#modalOM').on('shown.bs.modal', function (e) {
        //	alert(' modl show ' + $('#ReturnToVendor').val())
        //});

        helpers.buildDropdown('/Picker/GetListOM', $('#OMID'), true, '- select om -');

        if (vettingRoute == '3') {
            $('#titleModal').text(' / Return To Vendor');
            $('#btnReturn').show();
            $('.tab-email').show();
            $('.divReturntToVendor').show();
        }

        $("#btnReturn").click(function () {
            swal({
                title: "Return all parts to Vendor ?",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#F56954",
                confirmButtonText: "Yes",
                cancelButtonText: "No",
                closeOnConfirm: false,
                closeOnCancel: true
            },
                function (isConfirm) {
                    if (isConfirm) {
                        sweetAlert.close();
                        frmModalReturnToVendor();
                    }
                });
        });


        $tblCase.bootstrapTable({
            cache: false,
            pagination: true,
            search: false,
            striped: true,
            clickToSelect: true,
            reorderableColumns: true,
            toolbar: '.toolbarCase',
            toolbarAlign: 'left',
            sidePagination: 'server',
            showColumns: true,
            //showRefresh: true,
            smartDisplay: false,
            pageSize: '5',
            formatNoMatches: function () { return '<span class="noMatches">-</span>'; },
            columns: [{
                title: 'No',
                halign: 'center',
                align: 'right',
                width: '3%',
                formatter: runningFormatter,
                switchable: false
            }, {
                field: 'CaseNo',
                title: 'Case No',
                halign: 'center',
                align: 'left',
                sortable: true,
                switchable: false
            }, {
                field: 'CaseType',
                title: 'Case Type',
                halign: 'center',
                align: 'left',
                sortable: true
            }, {
                field: 'CaseDescription',
                title: 'Case Desc',
                halign: 'center',
                align: 'left',
                sortable: true,
                switchable: false
            }, {
                field: 'WeightKG',
                title: 'Weight (kg)',
                halign: 'right',
                align: 'right',
                sortable: true,
                switchable: false
            }, {
                field: 'LengthCM',
                title: 'Length (cm)',
                halign: 'right',
                align: 'right',
                sortable: true,
                switchable: false
            }, {
                field: 'WideCM',
                title: 'Wide (cm)',
                halign: 'right',
                align: 'right',
                sortable: true,
                switchable: false
            }, {
                field: 'HeightCM',
                title: 'Height (cm)',
                halign: 'right',
                align: 'right',
                sortable: true,
                switchable: false
            }, {
                field: 'RouteID',
                title: 'Route ID',
                halign: 'center',
                align: 'left',
                sortable: true
            }, {
                field: 'CaseID',
                title: 'Id',
                sortable: true,
                visible: false
            }
            ]
        });


        $tblDet.bootstrapTable({
            cache: false,
            pagination: true,
            search: false,
            striped: true,
            clickToSelect: true,
            reorderableColumns: true,
            toolbar: '.toolbarDetail',
            toolbarAlign: 'left',
            sidePagination: 'server',
            showColumns: true,
            //showRefresh: true,
            smartDisplay: false,
            pageSize: '5',
            formatNoMatches: function () { return '<span class="noMatches">-</span>'; },
            columns: [{
                field: 'action',
                title: 'Action',
                width: '99px',
                align: 'center',
                formatter: formatChangeOM,
                events: operateEventsOM,
                switchable: false
            }, {
                title: 'No',
                halign: 'center',
                align: 'right',
                width: '3%',
                formatter: runningFormatter,
                switchable: false
            }, {
                field: 'CaseNo',
                title: 'Case No',
                halign: 'center',
                align: 'left',
                sortable: true,
                switchable: false
            }, {
                field: 'PartsNumber',
                title: 'Parts Number',
                halign: 'center',
                align: 'left',
                sortable: true,
                switchable: false
            }, {
                field: 'PartsDescriptionShort',
                title: 'Parts Description',
                halign: 'center',
                align: 'left',
                formatter: formatterPartName,
                sortable: true,
                switchable: false
            },
            {
                field: 'PartsName',
                title: 'PartsName',
                sortable: true,
                visible: false,
                switchable: false
            },
            {
                field: 'COODescription',
                title: 'COO',
                halign: 'center',
                align: 'left',
                sortable: true
            }, {
                field: 'InvoiceItemNo',
                title: 'Item #',
                halign: 'right',
                align: 'right',
                sortable: true,
                switchable: false
            }, {
                field: 'InvoiceItemQty',
                title: 'Item Qty',
                halign: 'right',
                align: 'right',
                sortable: true,
                switchable: false
            },
            {
                field: 'PartGrossWeight',
                title: 'Gross WT',
                halign: 'right',
                align: 'right',
                sortable: true,
                switchable: false
            },
            {
                field: 'CustomerReff',
                title: 'Cust Ref',
                halign: 'center',
                align: 'left',
                sortable: true
            },
            {
                field: 'HSCode',
                title: 'HS Code',
                halign: 'center',
                align: 'left',
                sortable: true,
                switchable: false
            },
            {
                field: 'HSDescription',
                title: 'HS Desc',
                sortable: true,
                visible: false
            },
            {
                field: 'OMCode',
                title: 'OM',
                halign: 'center',
                align: 'left',
                sortable: true
            },
            {
                field: 'DetailID',
                title: 'Id',
                sortable: true,
                visible: false
            }
            ]
        });

        $tblShipmentStatus.bootstrapTable({
            cache: false,
            pagination: true,
            search: false,
            striped: true,
            clickToSelect: true,
            reorderableColumns: true,
            toolbar: '.toolbarCase',
            toolbarAlign: 'left',
            sidePagination: 'server',
            showColumns: true,
            //showRefresh: true,
            smartDisplay: false,
            pageSize: '5',
            formatNoMatches: function () { return '<span class="noMatches">-</span>'; },
            columns: [{
                title: 'No',
                halign: 'center',
                align: 'right',
                width: '3%',
                formatter: runningFormatter,
                switchable: false
            }, {
                field: 'dano',
                title: 'Da Number',
                halign: 'center',
                align: 'left',
                sortable: true,
                switchable: false
            }, {
                field: 'origin',
                title: 'Origin',
                halign: 'center',
                align: 'left',
                sortable: true,
                switchable: false
            }, {
                field: 'destination',
                title: 'Destination',
                halign: 'center',
                align: 'left',
                sortable: true,
                switchable: false
            }, {
                field: 'customer',
                title: 'Customer',
                halign: 'center',
                align: 'left',
                sortable: true,
                switchable: false
            }, {
                field: 'receiver',
                title: 'Receiver',
                halign: 'center',
                align: 'left',
                sortable: true,
                switchable: false
            }, {
                field: 'no_sequence',
                title: 'No Sequence',
                halign: 'center',
                align: 'left',
                sortable: true,
                switchable: false
            }, {
                field: 'tracking_station',
                title: 'Tracking Station',
                halign: 'center',
                align: 'left',
                sortable: true,
                switchable: false
            }, {
                field: 'tracking_status_id',
                title: 'Tracking Status Id',
                halign: 'center',
                align: 'left',
                sortable: true,
                switchable: false
            }, {
                field: 'tracking_date',
                title: 'Tracking Date',
                halign: 'center',
                align: 'left',
                sortable: true,
                switchable: false
            }, {
                field: 'tracking_status_desc',
                title: 'Tracking Status Description',
                halign: 'center',
                align: 'left',
                sortable: true,
                switchable: false
            }, {
                field: 'city',
                title: 'City',
                halign: 'center',
                align: 'left',
                sortable: true,
                switchable: false
            }, {
                field: 'datetime_updated',
                title: 'Datetime Update',
                halign: 'center',
                align: 'left',
                sortable: true,
                switchable: false
            }
            ]
        });

        refreshPartsCase = function () {
            window.pis.table({
                objTable: $tblCase,
                urlSearch: '/vetting-process/PartsCasePage',
                urlPaging: '/vetting-process/PartsCasePageXt',
                searchParams: {
                    PartsOrderID: $("[name=PartsOrderID]").val(),
                    invoiceNo: $("[name=InvoiceNo]").val(),
                    invoicedate: $("[name=InvoiceDate]").val()
                },
                autoLoad: true
            });
        };

        refreshPartsDetail = function () {
            setTimeout(function () {
                enableLink(false);
                $tblDet.find(".noMatches").html('<span style="color:red">..loading ..!</span>');
                $('.fixed-table-loading').css('color', 'red');
                $('.fixed-table-loading').show();
            }, 100);

            window.pis.table({
                objTable: $tblDet,
                urlSearch: '/vetting-process/PartsDetailPage',
                urlPaging: '/vetting-process/PartsDetailPageXt',
                searchParams: {
                    PartsOrderID: $("[name=PartsOrderID]").val(),
                    invoiceNo: $("[name=InvoiceNo]").val(),
                    invoicedate: $("[name=InvoiceDate]").val(),
                    vettingRoute: vettingRoute
                },
                autoLoad: true
            });
        };

        refreshPartsDetailShipment = function () {
            setTimeout(function () {
                enableLink(false);
                $tblShipmentStatus.find(".noMatches").html('<span style="color:red">..loading ..!</span>');
                $('.fixed-table-loading').css('color', 'red');
                $('.fixed-table-loading').show();
            }, 100);

            window.pis.table({
                objTable: $tblShipmentStatus,
                urlSearch: '/vetting-process/ShipmentStatusPage',
                urlPaging: '/vetting-process/ShipmentStatusPageXt',
                searchParams: {
                    invoiceNo: $("[name=InvoiceNo]").val(),
                    DANumber: $('#daNumber').text()
                },
                autoLoad: true
            });
        };

        //refreshPartsDetail();

        $("form").removeData("validator");
        $("form").removeData("unobtrusiveValidation");
        $.validator.unobtrusive.parse("form");
        var isrunning = false;


        $("#myModalPlace").on('shown.bs.modal', function (e) {
            if (isrunning == false) {
                isrunning = true;
                enableLink(false);
                $('.fixed-table-loading').css('color', 'red');
                $('.fixed-table-loading').show();
                refreshPartsCase();
                refreshPartsDetail();
                refreshPartsDetailShipment();
            }
        });

        if (myApp.isReadOnly == 'true') {
            $('#btnReturn').hide();
            $(".table").bootstrapTable('hideColumn', 'action');
        }

    });


    function formatChangeOM(value, row) {
        var btn = [];
        btn.push('<div class="btn-group">');
        btn.push('<button type="button" class="btn btn-xs btn-primary editOm" title="Change OM"><i class="fa fa-puzzle-piece"></i>&nbsp;</button>');
        btn.push('</div>');
        return btn.join('');
    }
    function formatterPartName(value, row, index) {
        return row.PartsDescriptionShort + (row.PartsName == '' ? ' (<span style="color:red">not exist in PartsList</span>' : '');
    };

    function frmModalOMSubmit(frm) {

        $('#progress').show();
        enableLink(false);

        $('#frmModalOM [name=Email]').val($('#emailList').val());

        $.ajax({
            url: frm.action,
            type: frm.method,
            data: $(frm).serialize(),
            success: function (result) {

                enableLink(true);

                if (result.Status == 0) {
                    if (result.Msg != undefined) sAlert('Success', result.Msg, 'success');
                    $('#modalOM').modal('toggle');
                    showMainScrollbar(false);
                    $('#progress').hide();
                    refreshPartsDetail();
                }
                else {
                    if (result.Msg != undefined) sAlert('Failed', result.Msg, 'error');
                    $('#progress').hide();
                }
            }
        });
        return false;
    }

    function returnToVendorId(obj) {
        $('#progress').show();
        enableLink(false);

        $.ajax({
            url: '/vetting-process/partsOrderReturnToVendorId',
            type: 'POST',
            data: { id: $("[name=DetailID]").val() },
            success: function (result) {

                enableLink(true);

                if (result.Status == 0) {
                    //if (result.Msg != undefined) sAlert('Success', result.Msg, 'success');
                    $('#modalOM').modal('toggle');
                    showMainScrollbar(false);
                    $('#progress').hide();
                    refreshPartsDetail();
                }
                else {
                    if (result.Msg != undefined) sAlert('Failed', result.Msg, 'error');
                    $('#progress').hide();
                }
            }
        });
        return false;
    }

    function frmModalReturnToVendor() {

        $('#progress').show();
        enableLink(false);

        $.ajax({
            url: '/vetting-process/partsOrderReturnToVendor',
            type: 'POST',
            data: { id: $("[name=PartsOrderID]").val(), email: $('#emailList').val(), remark: $('#Remark').val() },
            success: function (result) {

                enableLink(true);

                if (result.Status == 0) {
                    if (result.Msg != undefined) sAlert('Success', result.Msg, 'success');
                    $('#progress').hide();
                    $("#btnClose").trigger('click');
                }
                else {
                    if (result.Msg != undefined) sAlert('Failed', result.Msg, 'error');
                    $('#progress').hide();
                }
            }
        });
        return false;
    }

</script>
